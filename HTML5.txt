1. 리퀘스트 메소드 (☆는 단순히 정의되있는 거 묻는 문제)
PUT : 리소스의 변경(오키카에)을 요구 ★☆
GET : 리소스 요구 ☆
POST : 리소스 송신
DELETE : 리소스 삭제
HEAD : 리소스의 요구. 단, GET과 달리 리스폰스바디를 돌려주지 않음
OPTIONS : 서버의 조사
CONNECT : 터널을 엶 ☆
TRACE : 네트워크 경로의 조사

2. 스테타스 코드
정보
101 : 프로토콜의 교환
성공
200 : 성공
리다이렉트
301 : 영구적인 리다이렉트 ★
304 : 변경 없음. 캐쉬한 파일이 변경됨
307 : 일시적인 리다이렉트
클라이언트 에라
401 : 인증이 필요
403 : 악세스권이 필요
404 : 리소스가 발견되지 않음 ★
서버에러
500 : 서버측에서 에러가 발생

3. Basic 인증의 설명
- 유저명, 패스워드는 Autorization헤더에 추가되어 송신된다. ★
- 인증이 실패한 경우, 스테이터스 코드 401을 돌려준다. ★
- 거의 대부분의 브라우저나 Web서버에서 실장되어 있다. ★
- 유저명, 패스워드는 해시값화 하여 송신하지 않음. (위험성 〇)
- HTTPS를 이용하는 것이 바람직하지만 필수는 아님.

4. HTTP 쿠키
- 4KB정도의 데이터 보존이 가능하다.
- 브라우저에 데이터를 보존한다. ★
- JavaScript로 조작할 수 있다. ★
- HTTP, HTTPS 어느 쪽에서도 사용할 수 있다. ★
- 데이터의 유효기간을 설정할 필요가 있다.

5. HTTP로 이용되는 인증방법의 설명
- Digest인증은 유저명, 패스워드를 해시값화한다. ★
- Web어플리케이션에서는 Basic, Digest 이외의 독자적인 인증을 이용하는 것도 가능하다.

6. HTTP 리퀘스트의 설명 (잘못된 거 찾는 문제)
- 리퀘스트의 개시행에는 URL과 HTTP의 리퀘스트 메소드, HTTP버젼이 포함되어 있다.
- 메세지보디에는 브라우저에서의 송신 데이터가 포함되어 있다.
- HTTP의 리퀘스트 메소드가 GET인 경우, 메세지보디는 공백이어도 괜찮다.
- Content-Length헤더는 메세지보디의 사이즈를 설정한다.
- Accept-Language헤더는 브라우저가 이해 가능한 프로그래밍 언어를 설정하는 것이 아닌,
  브라우저가 받아들일 수 있는 자연언어(일본어, 영어 등)을 설정하기 위한 것이다. ★

7. JSON데이터의 우케이레를 나타내는 Accept헤더 필드의 기술
- Accept: application/json ★

8. 이하의 URL
   http://www.know.com/kw/sch/course.httml?cq=HTML#main
스키마://호스트명:포트번호/디렉토리/파일명
스키마~호스트명~포트번호까지를 오리지날이라고 부른다.
http://www.know.com ★
플래그먼트는 #으로 표시한다.
#main ★

9. HTTP(80) / HTTPS(443)의 기존포트번호 ★
0 ~ 1023을 웰노운 포트 번호
웰노운 포트 번호 쓰는 경우에는 생략 가능

10. HTTPS의 설명 (잘못된 것 고르는 문제)
- SSL/TLS프로토콜을 이용하여 통신을 암호화하고, 송수신을 한다.
- HTTP통신과 비교하여 Web서버의 부담이 높다.
- 암호화를 위해서는 인증국(CA)으로 부터 인증서를 취득할 필요가 있다.
- HTTP 헤더, 인잭션의 대책이 아닌, 나리스마시나 도청을 방지할 수 있다. ★
- HTTPS의 웰노운 포트 번호는 443이다.

11. 캐쉬를 제어하는 HTTP헤더필드
- AGE : 프로킨서버(프록시 서버, 중계서버)에 캐쉬하는 기한을 설정한다. 10은 10초. ☆
- Cache-Control : 캐쉬의 제어를 행한다. ☆
- Expires : 리스폰의 유효기간을 설정한다. ☆

12. 리다이렉트의 지정방법 (옳지 않은 것)
- JavaScript로 전송처를 지정할 수 있다.
- <link>태그로 전송처를 지정할 수 없고, CSS 참조에 사용한다. ★
- <meta>태그로 전송처를 지정할 수 있다.
- Location헤더필드로 전송처를 지정할 수 있다. (리다이렉트 사키의 URL) 
- Referer헤더필드로 전송처를 지정할 수 없고, 전 페이지의 URL ★

. 주된 HTTP헤더 필드
- Accept-Language : 브라우저가 우케이레 가능한 언어 ★
- Accept : 클라이언트가 우케이레 가능한 컨텐츠 타입 ★
- Age : 프로킨서버에 캐쉬하는 초수 ★
- Authoriztion : 인증정보 ★
- Cache-Control : 캐쉬의 제어를 행한다. ★
- Content-Length : 메세지보디의 사이즈를 설정 ★
- Exprise : 리소스의 유효기한 ★
- Location : 리다이렉트처의 URL ★
- Referer : 전 페이지의 URL ★

. HTML5의 사용 선언하는 문서형선언(DOCTYPE선언)
- <!DOCTYPE html> ★

. HTML5에서 추장되고 있는 문자 코드
- UTF-8

. 이하를 표시하는 문자실체참조의 조합
    HTML에서는, 태그를<>으로 감싼다.
HTML에서는, 태그를&lt;&gt;으로 감싼다. ★
반각 스페이스 : &nbsp;
< : &lt; ★
> : &gt; ★
& : &amp; ★
" : &quot;

. HTML 문서를 이용하고 있는 언어에 일본어 지정하는 방법
<html lang="ja"> ★

. HTML5, 또는 HTML4.01의 문자코드 지정 방법
- <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> (4.01) ★
- <meta charset="UTF-8"> (5) ★

. meta요소의 설명 (틀린 것 고르는 문제)
- name="roboots"로 검색엔진(크롤러)에 대한 설정을 할 수 있다.
- name="description"으로 페이지의 설명을 기술할 수 있다.
- charset속성으로 문자코드를 지정할 수 있다.
- http-equiv="content-security-policy"으로 세큐리티 폴리시를 설정할 수 있다.
- http-equiv="refresh"으로 동페이지를 다시 읽을 수 있는게 아니라, 설정한 시간을 경과한 후에 어떤 페이지로 리다이렉트할 것인가를 설정. ★

. head요소의 자요소로서 정의가능한 조합
- title, meta, style, link
base : 대상URL의 기점이 되는 URL을 설정
meta : Web페이지에 관한 정보를 담는다. ☆
style : CSS에 의한 스타일을 기술 ☆
title : Web페이지의 타이틀을 설정 ☆
  브라우저 탭에 나타나는 제목
link : 외부 리소스(주로 CSS파일)과의 리레숀(관계, relation) 설정 ☆

. Data URI스키마의 설명(틀린 것 찾는)
- HTML문서 내에서만 사용할 수 있는 것이 아닌, HTML이나 CSS에 외부 리소스를 담기 위한 방법 ★
- 브라우저와 Web서버의 통신회수를 줄이는 것이 가능하다.
- 파일의 종류에 따라 사이즈가 커진다.(동영상 파일을 담을 경우에는 Base64화가 필요하여 사이즈가 커진다.) 
- 동영상 데이터의 경우에는 해시값화를 한 값을 설정하는 것이 아니고, Base64화한다. ★
- 외부 리소스는 파일마다의 개별 캐쉬는 행할 수 없다.

. Data URI스키마 완성
    [  data:  ]image/png;base64, iVBORw0KGgoAA..... ★
  data: [미디어타입][;base64], 데이터

. form요소에 설정 가능한 속성 (틀린 것 찾는)
- action
- method
- id
- data-target
- XXXXX href XXXXX(href 속성은 링크사키를 지정하는 속성)

. DOM에 관한 설명 옳은 것 
- 요소의 속성을 조작할 수 있다. ★
- 이벤트를 제어할 수 있다. ★
- XML을 조작할 수 있다. ★
요소의 추가, 삭제
속성의 조작
이벤트의 처리

. 이벤트의 종류를 식별하기 위한 요소를 준비하고 싶다. 커스텀데이터를 사용하는 경우의 키워드
<ul>
	<li [  data  ]-pet-category="cat">고양이</li> ★
</ul>
주로 css나 자바스크립트에서 html에 접근할 때 사용하기 위해 준비함.

. 마이크로 데이터의 설명
- HTML 문서에 기계가 읽을 수 있는 데이터를 담는 것이 가능하다. ★
itemscope : 마이크로 데이터를 적용하는 범위를 지정. 보통 itemtype과 병술한다.
itemtype : 마이크로 데이터의 어휘를 지정
itemprop : 아이템의 프로퍼티명

. HTTP 리퀘스트, 리스폰의 설명 (틀린 것 찾는)
- 복수 리퀘스트를 통한 상태를 유지하는 스테이트풀(フル,poll)통신이 아니고, 일련의 리퀘스트, 리스폰을 종료하면 사용한 상태를 폐기한다. ★
- 브라우저에서 리퀘스트를 개시하는 풀(プル,full)형통신이 있다.
- ID와 패스워드를 이용하여 인증이 가능하다.
- HTTP헤더필드에 캐쉬를 설정하는 것이 가능하다.
- HTTP/2에서는 통신속도의 향상을 기대할 수 있다.


































