ㅇㅇㅇㅇ1. 컴퓨터 구성요소ㅇㅇㅇㅇ
1-1. 정보의 표현
정보량의 최소단위 bit
8bit = 1 Byte
10^3 k
10^6 M
10^9 G
10^12 T

10^-3 m 미리
10^-6 μ 마이크로
10^-9 n 나노
10^-12 p 피코

a^m * a^n = a^*(m+n)
a^0 = 1
a^(-m) = 1/(a^m)

ASCII코드
영숫자, 기호, 제어문자만
미국 표준 기호로 가장 기초가 되는 문자 코드
한자, 카나 같은 일본어는 없음
시프트JIS코드
아스키 코드에 한자, 카나 더한 코드
EUC
유닉스, 리눅스 등에서 사용 됨
한자, 카나도 사용 가능
Unicode
세계의 많은 코드를 하나의 체계로 만든 코드
유니코드를 부호화 한 방식 중 하나가 UTF-8

문제1)
32비트로 표현할 수 있는 비트패턴의 개수는 24비트로 표현할 수 있는 개수의 몇 배인가.
32비트 비트패턴의 정보량은 2^32
2^32 / 2^24
= 2^8
따라서 256배

문제2)
시스템 개발에서 공수(人月 にんげつ)과 기간의 관계가
기간 = 2.5 * 공수^(1/3)인 경우, 공수 4096 닌게츠의 기간은 몇 개월인가
x = 2.5 * 4096^(1/3)
x = 40 개월

1-2. 컴퓨터의 구성
컴퓨터의 5가지 장치
cpu - 제어 : 기억장치에서 프로그램의 명령을 받아서 해독, 각 장치에 지시를 내림
      - 연산(演算 えんざん) : 사칙연산이나 논리연산 등을 행함
기억 : 데이터나 프로그램을 기억함
입력 : 컴퓨터의 외부에서 프로그램이나 데이터를 읽어들임
출력 : 컴퓨터의 내부에서 처리된 데이터를 외부로 출력

데이터 흐름
입력 -> 기억 -> (연산, 제어) -> 출력

프로그램의 기억 방식(프로그램 격납 방식)
현대 컴퓨터는 주기억장치(RAM 등)에 기억 된 프로그램을 cpu가 순서대로 읽고 해독, 실행하는 방식.

1-3. CPU
컴퓨터의 두뇌에 해당. 프로세서라고도 불림.
주로 크록크 주파수, 바스폭으로 표기됨.

크록크 주파수
주파수가 올라갔다가 내려간 주기를 1 크록이라고 봄.
올라가고 내려갔다가 다시 올라가기 전 까지를 전부 1크록으로 봄.
컴퓨터의 동작의 기준이 되는 크록기호(크록 펄스 パルス)
1초에 1크록이 몇 번 반복되는 가를 표기한 게 크록 주파수이고, 단위는 Hz를 사용함.
예를 들어 2GHz라고 하면 1초에 2* 10^9 번 반복했다는 말임.

cpu 내부 크록주파수를 내부 크로크
cpu와 주기억장치 등의 주변회로를 연결하는 전송로의 크로크주파수를 외부크로크(시스템 크로크)라고 함
일반적으로 cpu 클록이 높으면 그만큼 성능은 좋아지지만
cpu 클럭이 2배 높아졌다고 해서 시스템 전체가 2배 좋아졌다고 할 수는 없음

버스
cpu나 주기억장치, 캐쉬메모리 등으로 서로가 데이터의 송수신을 하기 위해 존재하는 전송로를 버스라고 부름
일반적으로 버스폭이 넓을 수록, 클럭 주파수가 클 수록 데이터를 고속으로 송수신할 수 있음

문제1)
pc의 클럭 주파스에 관한 기술 중 적절한 것은?
ㄱ. cpu의 클럭 주파수와 주기억을 접속하는 시스템버스의 클럭주파수를 같지 않아도 된다. 맞음
ㄴ. cpu의 클럭주파수의 역수가 1초간 실행할 수 있는 명령수를 뜻한다. 개소리
ㄷ. cpu의 클럭 주파수를 2배로 하면 시스템 전체가 2배 성능이 된다. 개소리
ㄹ. 사용하고 있는 cpu 기종과 클럭 주파수가 等しい(ひとしい)면, 2종류의 pc의 프로그램실행능력은 동등하게 된다.
개소리 그 외 보조기억장치 등 많은 변수가 있음

1-4. cpu의 동작원리
레지스터 - cpu에 내장되어 있는 고속의 기억장치
명령레지스터 - 실행하는 명령을 격납함
명령 어드레스 레지스터(프로그램 카운터 PC) - 다음 실행할 명령의 주소를 격납
지표(指標しひょう)레지스터(인덱스 레지스터) - 기준이 되는 주소를 격납함. 지표어드레스지정방식에서 사용함
기저(基底)레지스터(베이스레지스터) - 기준이 되는 주소를 격납함. 기저어드레스지정방식에서 사용함
아큐무레-타(누계기 累計機) - 연산대상이나 연산결과를 격납함
범용레지스터 - 연산대상이나 연산결과를 격납함. 그 외 여러 목적을 가지고 사용됨

명령어
최종적으로 11011 등의 컴퓨터가 이해할 수 있는 기계어로 교환, 해독, 실행 됨
명령부와 어드레스부(オペランド, 피연산자) 로 구성되고
명령에 따라 어드레스부가 없거나, 어드레스부가 복수일 수도 있음
명령부 - 명령이나 연산을 지시함
어드레스부 - 처리대상이 되는 데이터의 주기억장치의 주소 등을 지시함

명령실행 사이클
(명령과 데이터는 주기억 장치에 있고 나머지는 전부 CPU에 있음)
1. 명령의 추출(取り出し)
명령어드레스레지스터(프로그램 카운터 pc)를 참조하여, 명령이 격납된  주기억장치상의 어드레스를 취득함.
취득한 어드레스에서 명령을 추출(명령 패치 フェッチ)하여, 명령 레지스터에 격납함.(명령부 + 어드레스부)
이때 명령 레지스터에는 다음 명령의 어드레스를 준비 셋 함.
2. 명령의 해독
명령 레지스터의 명령부를 디코더(해독기)로 해독하여 연산장치로 지시를 보냄
3. 실효 어드레스 계산
명령 레지스터의 어드레스 부 값을 어드레스 레지스터로 보내 처리대상의 데이터가 격납된 어드레스(실효 어드레스)를 계산함
4. 오페란드의 추출
처리대상 데이터를 추출하여 연산장치로 보낸다.
5. 명령의 실행
연산장치에서 연산을 실행한다.(받은 지시 + 받은 데이터)
6. 연산결과의 격납
연산결과를 격납한다.

和・差・積・商・
わ・さ・せき・しょう
더하기 빼기 곱하기 나누기

어드레스 지정 방식
컴퓨터는 주기억장치상에 있는 프로그램의 명령을 하나씩 추출하여 해독, 실행하고 있음
어드레스 지정 방식이란 명령의 어드레스부의 값에서 처리대상의 데이터가 격납된 실효 어드레스(유효 어드레스)를 요구하는 방식
어드레스 수식(修飾 しゅうしょく)이라고도 불림
1. 즉치 어드레스 지정 방식
명령의 어드레스부에 데이터 그 자체를 격납하는 방식
2. 직접 어드레스 지정 방식
명령의 어드레스부에 유효(실효) 어드레스 값을 격납하는 방식
어드레스 부(20) -> 주기억 장치의 어드레스 (20)에는 데이터가 짜잔
3. 간적 어드레스 지정 방식
명령의 어드레스부에 유효 어드레스 값을 가진 어드레스 값을 격납하는 방식
어드레스 부(20) -> 주기억 장치의 어드레스 (20) 에는 데이터 25가
-> 주기억 장치 어드레스 (25) 에는 진짜 데이터가 짜잔
4. 상대 어드레스 지정 방식
명령의 어드레스부의 값 + 명령 어드레스 레지스터(프로그램 카운터)의 값을 더한 값을 실효 어드레스로서 격납하는 방식
어드레스 부(20) + PC (50) -> 주기억 장치 주소 70에 데이터가 짜잔
5. 지표 어드레스 지정 방식
명령의 어드레스부의 값 + 지표 레지스터의 값을 더한 값을 실효 어드레스로서 격납하는 방식
어드레스 부(20) + 지표 레지스터 (50) -> 주기억 장치 주소 70에 데이터가 짜잔
6. 기저 어드레스 지정 방식
명령의 어드레스부의 값 + 기저 레지스터의 값을 더한 값을 실효 어드레스로서 격납하는 방식
어드레스 부(20) + 기저 레지스터 (50) -> 주기억 장치 주소 70에 데이터가 짜잔

문제1)
간접 레지스터 그림 보고 이거 뭐냐

문제2)
                      프로세서
주기억 장치 -> (A -> 명령 디코더 ) 
패치되는 명령인데 A에 뭐가 올까?
!명령 레지스터

1-5. CPU의 고속화 기술
기본적으로 cpu는 앞에서 설명한 바와 같이 1~6의 순서로 명령이 실행된다.
- 逐次(ちくじ)제어방식
1~6을 하나의 묶음으로 하나씩 순서대로 반복되며 실행되는 방식
6이 실행되고 다시 1이 되기 까지 1은 계속 놀고 있음 이런 식으로 전부 노는 시간이 많아서 효율 안 좋음
- 파이프라인 방식
축차제어 방식을 한 스테이지 씩 늘려서 실행하는 방식
병렬처리 방식으로 고속화를 노리는 방식
파이프라인으로 효율은 올라갔지만 분기가 발생한 경우에는
미리 읽어서 병렬실행 중이던 명령2를 폐기하고 분기의 새로운 명령3을 실행해야 하는 경우가 발생함
이러한 분기 명령을 대처하기 위해서
실행되는 확률이 높은 명령을 예측하는 분기예측,
예측한 분기처의 명령을 미리 개시하고 결과를 가지고 있다가, 예측한 분기가 맞으면 그 결과를 이용하는 투기실행 등의 기술이 사용됨
- 슈퍼 파이프 라인 방식
파이프 라인 방식을 좀 더 세분화 하여 고속화 하는 방식
하나 씩 비튼 걸 0.5씩 비틂
- 슈퍼 스카라 방식
복수의 파이프 라인을 사용하여 동시에 복수의 명령을 실행하는 것으로 고속화
동시에 실행도 하고 파이프 라인 방식도 사용하고

cpu의 명령체계
cpu의 명령 세트 아키텍처에는 CISC와 RISC가 있음
- CISC (Complex Instruction Set Computer) 
복잡한 명령체계로 한 번의 명령으로 복잡한 처리를 실행시키는 것.
pc의 cpu에서 채용
- RISC(Reduced Instruction Set Computer)
단순한 명령체계로 명령의 실행시간이 평등하게 되고, 파이프라인으로 효과 좋게 처리가 가능함
주로 스마트폰, 타블렛, 조합 시스템 등의 CPU에서 채용

멀티 코어 프로세서
하나의 cpu 안에 복수의 코어로 여러 처리를 동시에 실행 가능

GPU
3D의 동영상 처리를 고속으로 실행하는 동영상 처리 장치

문제1) CPU의 투기실행에 대한 설명
분기 명령의 분기처가 정해지기 전에 에측한 분기처의 명령을 실행을 개시하는 것

문제2) 딥러닝의 학습에 GPU를 이용하는 이점으로 적절한 것은?
범용의 행렬 연산 유닛을 이용하여, 행렬연산을 고속으로 실행할 수 있다.
(GPU는 동영상 처리의 연산을 위해서 대량의 행렬 연산을 실행할 수 있음.)

문제3) RISC 프로세서의 5단계 파이프라인의 명령실행제거의 순서는 어느 것인가.
명령 패치(取出し) -> 명령 엔코더 (해독), 레지스터 파일 읽어들임 -> 실행과 어드레스 생성 -> 메모리 아쿠세스 -> 연산결과 써넣음


1-6. 반도체 메모리
RAM(Random Access Memory) 
읽고 쓰기 가능한 메모리
전원 끊으면 기억하고 있던 내용 날아감(揮発性 きはつせい)

DRAM(Dynamic RAM)
콘덴서에 전하를 갖춘 상태인가 아닌가를 1비트를 표기하고 있음 SRAM에 비교하여 대용량에 가격이 쌈
콘덴서는 오래 방치하면 방전되어 버리기 때문에 한 번씩 리플레쉬 동작(재 쓰고 읽음)이 필요함
주기억 장치에 사용되고 있음
SRAM(Static RAM)
플립플롯(フリップフロップ)회로로 구성되어 고속이지만, 구조가 복잡하여 직접도를 높이기 어렵다.
따라서 DRAM에 비하여 소용량에 가격이 비쌈.
전원이 공급되고 있는 한 기억 내용을 계속 가지고 있기에 리플레쉬 동작은 필요 없음.
캐쉬 메모리에 쓰이고 있음



ROM(Read Only Memory) 
원래는 読み出し 읽기 전용이었지만 최근에는 읽고 쓰기 까지 가능하게 되었음
전원을 끊어도 내용 그대로 남아 있음(비휘발성)

마스크 ROM
쓰기 X 소거 X
제조할 때 써넣은 다음에 사용자가 다시 써넣을 수 없음
UV-EPPROM
자외선조명을 이용하여 전소거 가능
EEPROM
전압으로 부분 소거 가능
소거, 쓰기는 1바이트 단위로 가능
플래시 메모리
전압으로 전소거, 부분 소거 가능
내용 수정은 블록 단위로 소거 후 다시 써넣을 수 있음

캐쉬 메모리
주기억장치 보다도 고속으로, CPU와 주기억 장치간 사이에 배치하는 메모리
CPU --(고속)-- 캐쉬 메모리 --(저속)-- 주기억 장치
주기억 장치에서 읽어들인 데이터를 캐쉬 메모리에 보존하여,
CPU가 나중에 같은 데이터를 읽어들일 때 고속으로 캐쉬 메모리에서 읽어들이는 것으로 실행 악세스 시간을 단축할 수 있음

실효 악세스 시간
악세스하는 데이터는 캐쉬메모리, 주기억장치 둘 중 하나에 존재하고 있음
악세스 데이터가 캐쉬메모리에 보존할 확률을 히트율이라고 함
문제 예)
히트율 80%
캐쉬메모리 악세스 시간 10ns
주기억장치 악세스 시간 60ns
실효 악세스 시간은?
히트율 80%라는 말은 캐쉬 메모리에 존재할 확률 80%,
주기억장치에 존재할 확율 20% (<-이걸 NFP라고도 함 Not Found Probability))
0.8 * 10ns + 0.2 * 60ns = 20ns
따라서 캐쉬메모리를 사용했을 경우의 실효 악세스 시간은 20ns

1차 캐쉬, 2차 캐쉬 메모리
주기억장치와 cpu 사이의 시간 차이가 너무나 큰 경우 캐쉬 메모리를 단계별로 나누기도 함
CPU - 1차 메모리 - 2차 메모리 - 주기억장치
1차 2차를 L1, L2캐쉬라고도 부름

캐쉬메모리에 써넣는 방식은 2가지가 있응ㅁ
라이트 스루 방식
CPU에서 캐쉬메모리와 주기억장치 양쪽에 다 써넣는 방식
라이트 백 방식
CPU에서 캐쉬메모리로만 써넣고, 주기억 장치는 캐쉬메모리에서 요청이 있을 때에만 써넣을 수 있음

메모리 인터리브
주기억장치를 복수의 구획(방크)로 나누고 연속으로 어드레스의 내용을 병렬 악세스하는 것으로 악세스 고속화를 노리는 방식
메모리 1장보다 반 용량 * 2가 더 속도 빠른 걸로 생각


악세스 속도 비교
레지스터
1차 캐쉬
2차 캐쉬
주기억장치
보조기억 SSD
보조기억 HDD
레지스터는 CPU에 내장된 연산처리용 기억회로

문제1)
DRAM 특징은 어느 것?
ㄹ. 메모리셀 구조가 단순하여 고집적화할 수 있고, 비트 단위를 싸게할 수 있다.

문제2) 플래시 메모리의 기술 적절한 것?
ㄹ. 블록 단위로 전기적으로 데이터를 소거할 수 있음

문제3) 캐쉬 메모리 설명 적절한 것?
데이터 써넣는 명령을 실행하였을 때
캐쉬메모리와 주기억장치 양쪽에 써넣는 방식과
캐쉬메모리만 써넣고 주기억 장치의 써넣음은 캐쉬메모리에서 해당 데이터 요구가 발생했을 때 써넣는 방식 이렇게 있음

문제4) 주기억장치의 실효 악세스 시간 짧은 거
ㄱ. 주기억 15ns
ㄴ. 주기억 30ns
ㄷ. 캐쉬메모리 20ns 히트율 60% / 주기억 70ns
ㄹ. 캐쉬메모리 10ns 히트율 90% / 주기억 80ns
주기억의 실효 악세스 시간이라 주기억만 보면 될 줄 알았는데 그게 아니네;;;
ㄷ는 20 * (0.6) + 70 * (0.4) = 40ns
ㄹ는 10 * 0.9 + 80 * 0.1 = 17ns
따라서 ㄱ - ㄹ - ㄴ - ㄷ

1-7. 보조기억장치
CPU가 직접적으로 써넣을 수 있는 것은 주기억장치상에 있는 프로그램이나 데이터 뿐
주기억은 소용량, 전원 끊어지면 내용도 사라지는 휘발성을 가지고 있음
보조기억장치는 주기억에 비하여 저속이지만 대용량, 값쌈, 비휘발성의 특징

자기(磁気 じき)디스크 장치
자기 디스크 장치 HDD는 자성체를 입힌 원형 디스크에 데이터를 기록하고
자기 헤드를 이동시키며 데이터를 읽고 쓰는 장치
데이터를 기록하는 최소단위 - 섹터
섹터가 모여 동심원형이 되는 - 트랙
이 트랙이 모여 - 1면
중심축에서 같은 거리에 있는 트랙의 1층 2층 3층.. 의 집합을 - 실린더
실린더 단위로 악세스하고, 실린더는 논리적 개념임
이러한 기억방식을 섹터방식이라고 부름


악세스 시간
CPU가 데이터의 읽고 씀의 지령을 내리고 나서 데이터의 읽고 씀이 끝나기 까지의 시간을 악세스 시간
자기 디스크 장치의 악세스 시간은 위치결정시간, 회전마치시간, 데이터전송시간의 합으로 구할 수 있음
- 위치결정시간(시-크 시간)
자기 헤드를 목적 데이터가 존재하는 트랙까지 이동시키는 시간
헤드 지잉
- 회전마치시간(사-치 시간)
목적 데이터가 자기 헤드 위치까지 올 때 까지 회전시키는 시간
돌려돌려 돌림판
- 데이터 전송시간
목적 데이터 전체가 자기 헤드를 통과하는데 필요한 시간
피자 꼬다리 모양 전체 스캔 지잉

후라그멘테-숀(단편화)
자기 디스크 데이터를 쓰고 지웠다가 반복하면 데이터가 연속되게 존재하지 않고
여기저기 흩어지는 현상을 말함
당연히 악세스 시간 느려짐
이 플래그멘테이션을 해소하는 것이 디플래그.
단편화 된 데이터를 연속되게 재정렬함

플래쉬 메모리
전기적으로 전부분, 혹은 일부분을 소거하여 내용을 다시 쓸 수 있는 반도체 메모리
대용량에 악세스 시간 빠르고 컴팩트함
USB메모리, SD카드 등

SSD
플래쉬 메모리를 이용한 자기디스크장치를 대신하기 위한 기억매체(媒体 ばいたい)
자기디스크 같은 시크, 서치가 없어서 조용하고 진동, 충격에 강하고 소비전력 낮음 속도 빠름


광디스크
레이저 광을 사용하여 데이터를 읽고 쓰는 기억매체
대용량, 싸고, 내구성 뛰어남
CD
700MB
음악용, PC데이터, 소프트웨어
DVD
17.08GB
PC의 데이터가 아닌 영화 등의 동영상을 기록할 수 있음
BD
100GB
청자색의 레이저광선을 사용하여 하이비젼 영상을 2시간 이상 기록할 수 있음

광디스크의 기억방식
재생전용형(이용자는 쓰기 불가능) CD-ROM / DVD-ROM / BD-ROM
추기형(쓰기 가능, 수정 불가능) CD-R / DVD-R / BD-R
카키카케형(쓰기, 수정 가능) CD-RW / DVD-RW / BD-RE

문제1)
회전수 4200회 / 분으로 평균위치결정시간이 5ms의 자기디스크장치가 있음
이 자기 디스크의 평균마치시간은 약 몇 미리 초인가?
여기서 평균마치시간은 평균위치결정시간 + 평균회전마치시간

rpm은 분당 디스크의 회전 수
1분은 60초
1ms는 1/1000초
60,000ms당 4200회전
1회전에 약 14.28ms 걸린다는 말인데
반바퀴가 평균회전마치시간이니 (회전 마치 한바퀴 돌리면 결국 제자리ㅋㅋ)14.28ms / 2 = 7.14ms
5 + 7.14 = 12.14ms

문제2)
SD 메모리 카드의 상위규격의 하나인 SDXC의 특징은 무엇?
ㄹ. 파일시스템에 exFAT를 채용하여 최대 2TB의 용량을 대응할 수 있음



1-8. 입출력 장치
입력 장치
컴퓨터에 프로그램이나 데이터, 음성, 사진 등을 입력할 수 있게 컴퓨터에 지시를 내려주는 장치
문자 입력의 키보드
위치정보 입력의 마우스, 타블렛
위치정보 입력 장치는 포인팅 디바이스라고도 함
이미지 입력의 스캐너
터치한 부분의 표면전하의 변화를 탐지하여 위치를 검출하는 정전용량방식 터치패널

바코드 리더
상품이나 인쇄 된 帯状(たいじょう 띠모양)의 바코드를 읽어들이는

POS 시스템
(Point of Sales)
레지 입력의 자동화를 꾀하는 것 뿐만 아니라 바코드를 사용한 상품의 판매정보를 리얼 타임으로 수집, 売筋(うれすじ)상품이나 죽은상품 등을 파악할 수 있는 시스템
JAN 코드
일본에서 유통되고 있는 여러 상품을 관리하기 위한 바코드
QR코드
작은 영역으로 많은 정보를 격납할 수 있고, 에러 정정기능을 가지는 이차원 코드

RFID
(Radio Frequency IDentification)
극소의 IC칩에 안테나를 단 전자 꼬리표(荷札 にふだ)
전자파를 이용하여 정보를 비접촉으로 읽어들일 수 있음
IC태그라고도 불림
NFC는 RFID의 국제규격

출력장치
컴퓨터 내부에서 처리한 데이터를 외부로 출력하는 장치

액정디스플레이
빛을 투과하여 화소별로 제어하는 방식
백플레이트, 또는 외부 빛을 포함하는 구조가 필요함
유기EL디스플레이
전극 사이에 전기를 통과시켜 발광하는 특징인 유기화합물을 끼워넣은 구조
스스로 빛을 발하기 때문에 薄型(うすがた), 저전압구동, 저소비전력

해상도
디스플레이의 문자나 영상을 점이 모여 표현시키는데 이 점(비트)를 화소, 픽셀이라고 부름

VRAM(Video RAM)
디바이스에 표시되는 내용을 일시적으로 기록하기 위해 사용하는 전용 메모리
일반적으로 n비트로는 2^n의 색을 대응시킬 수 있음

빛의 3원색 RGB
프린터는 CMY(Cyan파랑 Magenta빨강 Yellow)의 3원색을 조합하여 K (Key plate)를 더한 4색(CMYK)을 사용하고 있음

레이저 프린터
프린터의 성능을 표시하는 지표로 1분간 인쇄할 수 있는 페이지 수를 뜻하는 PPM(Page Per Minute)이 있음
잉크젯 프린터
보통 개인용으로 많이 쓰는 프린터
돗도임팩트 프린터
충격을 주어 인쇄하는 방식으로 시끄럽지만 복사식의 전표인쇄에 사용 됨

dpi?
(dots per inch)는 해상도의 단위
1인치(2.54cm)에 몇 점으로 표시하는 가

3D 프린터
3D 모델링 데이터를 기초로 열을 녹여 樹脂(じゅし) 수지나 금속분말을 층별로 쌓는 등의 방식으로
입체적인 물건을 작성하는 프린터

문제1)
편의점에서 포인트 카드 등의 개인정보와 연결지어진 고객ID 별 POS 데이터를 수집, 분석하는 것에 의해 확인 가능한 것은?
ㄹ. 동일상품의 구입빈도

문제2)
RFID의 활용사례로서 적절한 것은?
ㄹ. 微小(びしょう) 매우 작은 무선팁에 의한 사람 또는 물건의 식별 및 관리

문제3)
3D 프린터의 기능 설명으로 적절한 것
ㄷ. 열융해적층방식 등으로 입체물을 조형하는 것

문제4)
1문자가 縦(たて)48비트, 横32비트로 표시되는 2단 비트맵의 파일이 있다.
문자 데이터가 8,192 종류 있을 때 문자 데이터 전체를 보존하기 위해서 필요한 영역은 몇 바이트인가

2단비트맵이랑 흑백으로 표현된 데이터를 뜻 함
하나의 점에 대응되는 데이터는 0 , 1 이므로 1bit
48 * 32 * 1 * 8192 = 12,582,912bit
바이트로 고치면 1,572,864 byte
약 1.5 MByte


1-9. 입출력 인터페이스
PC 본체와 주변기기를 젖ㅂ속할 수 있게 해주는 규격의 총칭

USB
(Universal Serial Bus) 
표준적인 시리얼인터페이스
USB 버스라는 유닛 쓰면 최대 127대까지 접속 가능
USB1.1 12Mbps 풀스피드
USB2.0 480Mbps 하이스피드
USB3.0 5Gbps 슈퍼스피드

핫 플래그?
접속되어 있는 기기의 전원을 넣은 상태로 뽑아도 괜찮은 기능 USB 생각
바스파워
USB 케이블을 통하여 컴퓨터의 본체에서 전원을 공급하는 방식

HDMI
영상 음성 제어 신호

블루투스
면허가 필요 없는 2.4GHz대의 전파를 이용하는 인터페이스
24Mbps, 반경 100m, 지향성 없이 통신 가능

지그비
면허 필요 없는 2.4GHz대의 전파를 이용하는 인터페이스
250kbps, 저비용, 저소비전력의 특징


문제1)
USB 3.0의 설명 적절한 것?
ㄹ. 슈퍼스피드라고 불리는 5Gbps의 데이터 전송 모드를 가지는 시리얼 인터페이스


ㅇㅇㅇㅇ2. 소프트 웨어와 멀티미디어ㅇㅇㅇㅇ
2-1. 소프트웨어
OS (os : Operating System) 
하드웨어나 어플리케이션소프트웨어(응용 소프트웨어) 를 관리, 제어하는 소프트웨어
기본소프트웨어라고도 불림
윈도우 유닉스 리눅스 안드로이드 IOS 등

제어프로그램
하드웨어 자원의 상태를 상항 감시하고 컴퓨터의 효과적인 이용을 실현하는 소프트웨어군
狭義좁은 뜻의 OS라고도 불림

쟙 관리 - 쟙 스케쥴 관리
타스트 관리 - cpu 보다 효과적 사용을 위해 와리아테
기억 관리 - 주기억장치를 보다 효과적으로 관리
파일 관리 - 디렉토리, 파일 등을 관리
그 외 등 등

유저
어플리케이션 소프트웨어
미들웨어 - os 와 app 사이에서 통일적인 인터페이스나 공통의 기본기능을 제공하기 위한 소프트웨어
OS
하드웨어

API(Application Program Interface) 
어플에서 OS가 준비한 각기능을 이용하기 위한 조합? 구조?
개발자는 0에서 개발하는 게 아니고 OS가 준비한 API를 이용하여 개발하는 게 효율적

디바이스 드라이버
pc 접속하기 위한 주변장치를 제어하하는 프로그램
플러그 앤 플레이(꽂으면 자동으로 필요한 설정, 드라이버 설치)

OSS(Open Source Software)
소스 코드를 공개하고 있는 소프트웨어
OSI에서 주장하는 OSS 최저조건으로
頒布(はんぷ) 반포(배포)처가 되는 개인이나 그룹, 이용분야를 제한하지 않음
재배포로 추가 라이센스를 요구하지 말 것
특정 제품에 제한적인 라이센스로 하지 말 것
여기서 PC나 IoT디바이스용으로 용도에 따라 OS, GUI환경, 어플 등을 조합하여 패키지로 재배포하는 단체를 디스트리뷰터라고 부름

OSS 라이센스
OSS 이용에 따른 라이센스 조건이 표면적으로
BSD(Berkeley Software Distribution) , GPL(GNU General Public License) 이 있음
BSD 라이센스는
무보증일 것,
개변 후의 재배포 시 원 소프트웨어의 저작(著者 ちょしゃ)권표시부분이나 라이센스 조문을 남길 것,
이 2가지의 제약이 있음
GPL은 여기에 카피레프트를 추가함
카피레프트란 저작권을 보유한 채로 프로그램의 복제, 개변, 배포를 제한하지 않고,
그 프로그램에서 파생된 2차저작물(파생물)에는 오리지날과 같은 배포조건을 적용한다는 개념
다시 말해 소프트웨어를 독점하지 않고, 함께 개량하여 공유 자산으로 하자는 의미

BSD
무보증
원 소스 저작권, 라이센스 표시 필요
변경한 것 자체를 표시할 필요 없음
소스 코드의 개시 필요 없음
다른 라이센스로 할 수도 있음

GPL
무보증
원 소스 저작권, 라이센스 표시 필요
소스 코드 개시 필요
다른 라이센스로 금지


문제1)
디바이스드라이버의 설명
ㄱ. PC에 접속된 주변기기를 제어하기 위한 소프트웨어

OSI에 의한 오픈 소스 소프트웨어의 정의를 따를 때 오픈 소스 소프트웨어에 대한 취급으로 적절한 것은?
ㄹ. 사내에서의 이용 등과 같이
오픈 소스 소프트웨어를 개변하여도 재배포 하지 않는 경우, 개변부분의 소스코드를 개시않아도 된다.

오답해설
ㄱ. 이용분야를 제한해서는 안 됨
ㄴ. 자유롭게 재배포 가능함. GPL에서는 이 조건이 있음.
ㄷ. 추가 라이센스비는 요구되지 않음.


2-2. 잡 관리와 타스크 관리
잡은 유저의 위치에서 바라 본 일의 단위
타스크는 OS에서 바라 본 일의 단위

잡관리
잡스케쥴링은 잡의 입력, 출력을 관리함
등록된 잡은 입력마치행렬에 등록되어 순서대로 처리를 기다림
처리된 후는출력마치행렬에 등록되어 순서대로 프린터 등에 처리결과가 출력되기를 기다림
큐스택 사용

스풀링
스풀링은 주기억장치와 저속의 입출력장치와의 데이터 전송을 보조기억장치를 끼워서 실행하는 것
예를 들어 프린터로의 출력데이터를 일시적으로 자기디스크에 써넣고, 프린터의 처리속도에 맞춰 조금씩 출력됨.
스풀링은 스루풋의 향상에 도움 됨

타스크 관리
타스크의 생성에서 소멸까지를 실행가능상태 / 실행상태 / 마치상태 3가지로 구분하여 관리
CPU를 유효활용하고 있음
- 실행가능상태 Ready
CPU의 사용권이 할당되기를 기다리는 상태.
- 실행상태 Run
CPU의 사용권이 할당되어 실행하고 있는 상태.
CPU가 하나만 존재할 경우, 실행상태 타스크는 하나만 존재
- 마치상태
다른 타스크가 입출력장치를 사용하고 있기 때문에 입출력처리가 완료되기를 기다리는 상태

태스크 상태 전이
1. 타스크 생성 -> 실행가능상태
생성 직후 태스크는 실행가능상태가 됨
2. 실행가능상태 -> 실행상태
실행할 태스크가 선택되어 CPU의 사용권을 부여하고 실행상태로 올림
CPU의 사용권을 할당하는 것을 디스패치라고 함
3. 실행상태 -> 실행가능상태
실행상태 중 다른 태스크가 우선도가 높은 경우, 끼어듦이 발생, 우선도가 높은 태스크에 사용권을 부여함
따라서 현재 실행상태 태스크는 원래 상태인 실행가능상태로 되돌림
4. 실행상태 -> 마치상태
실행상태 중에 입출력마치가 발생한 경우 마치상태로 전이함
5. 마치상태 -> 실행가능상태
입출력처리가 완료 되면 실행가능상태로 되돌림

태스크 스케쥴링
복수 태스크 중 어느 태스크를 우선적으로 사용권을 할당하는 방식
- 선착순방식
실행가능마치행렬의 선두에 있는 태스크부터 순서적으로 사용권을 할당함
- 처리시간순방식
처리예정시간이 가장 짧은 태스크부터 순서적으로 사용권을 할당
- 우선도순방식
우선도가 높은 태스크부터 사용권을 할당
- 라운드로빈방식
실행가능마치행렬의 선두에 있는 태스크부터 순서적으로 사용권을 할당하고,
일정시간(타임 슬라이스)가 경과한 경우, 실행 중단하고, 중단한 태스크는 실행가능마치행렬의 가장 마지막으로 보냄

멀티 태스크
복수의 태스크에 CPU의 처리시간을 순서대로 할당하는 것으로 태스크가 동시에 실행되는 것 같이 보이게 하는 방식
멀티프로그래밍이라고도 불림
겉으로 보기에는 복수의 태스크를 병렬처리하는 것 처럼 보임
예를 들어 우선도 높은 A태스크가  실행 중 CPU, I/O 를 오가며 처리를 하는데
CPU사용 후 I/O처리를 할 때에는 CPU가 놀게 됨
이 노는 시간을 유휴遊休(ゆうきゅう)시간, 아이돌타임이라고도 부름
이 노는 유휴시간에 태스크B의 처리를 시키는 것

태스크 실행방식에는 OS가 CPU를 관리하지 않고 프로그램에게 맡기는 논프리엔프티브방식(비선점방식)과
OS가 CPU를 관리하는 선점방식(프리엔프티브방식)
현재는 선점방식이 주류

멀티스레드
하나의 프로그램 안에서 병렬처리가 필요한 부분을 복수의 처리단위(스레드)로 분해하여
스레드를 병렬로 처리하는 OS의 기능

와리코미처리
실행중의 프로그램을 일시 중단하고, 제어프로그램으로 제어를 옮겨서 필요한 다른 처리로 바꾸는 것을 말함
와리코미에는 실행중인 프로그램이 원인으로 일어나는 내부와리코미,
-내부와리코미
프로그램 와리코미
SVC(슈퍼바이저 콜)와리코미

실행중인 프로그램 이외가 원인이 되는 외부와리코미가 있음
-외부와리코미
기계체크와리코미
입출력와리코미
타임와리코미
콘솔와리코미

M/M/1의 마치행렬모델
편의점 레지에서 손님 행렬 차례대로 처리하는 거 생각하라네

문제1)
3개의 태스크 우선도, 각 태스크를 단독실행한 경우의 CPU와 I/O 작동순서과 처리 시간을 표로 나타냄
우선도방식의 태스크 스케쥴링을 행한 OS의 경우 3개의 태스크가 동시에 실행가능상태가 되고 나서,
모든 태스크가 실행이 종료되기 까지의 CPU의 유휴시간은 몇 ms인가.
CPU는 하나이고, 1코어로 구성되어 있음
I/O는 경합하지 않음

고 CPU(3) -> I/O(5) -> CPU(2)
중 CPU(2) -> I/O(6) -> CPU(2)
저 CPU(1) -> I/O(5) -> CPU(1)

그냥 CPU는 우선순위대로 와리코미 막 시키고, I/O는 경합 없이 때 되면 실행되게 하면 됨
2ms + 1ms = 3ms

문제2)
내부와리코미로 분류되는 것
ㄴ. 제로로 除算(じょさん)나눗셈를 실행한 경우의 와리코미

문제3)
스풀링 기능의 설명으로 적절한 것
ㄷ. 주기억장치와 저속의 입출력장치 사이의 데이터 전송을 보조기억장치를 끼워서 실행하는 것으로
    시스템 전체의 처리능력을 높이는 것

문제4)
우선도를 기본으로 하는 프리엔프티브한 스케쥴링을 실행하는 리얼타임OS에서, 2개의 태스크A, 태스크B를 스케쥴링한다. 
A가 B보다 우선도가 높은 경우, 리얼타임OS가 실행하는 동작의 설명 중 적절한 것은?
ㄷ. B의 실행중에 A의 실행이 걸리면, B의 실행가능상태로 하고 A를 실행함

문제5)
전송태스크 -> 버퍼사이즈 : L -> 수신태스크
                S                      R
L ≧ (S - R) * T

2-3. 기억관리
프로그램기억방식은 프로그램을 주기억장치에 읽어들여 두고, CPU가 순서대로 읽고 쓰기를 실행하는 방식
현재 컴퓨터에는 이 방식으로 프로그램은 자기디스크 등의 보조기억장치에 보존되어 있지만,
실행시에는 주기억장치에 배치하고, 실행이 끝나면 주기억장치에서 소거됩니다. (주기억장치의 해방)

주기억장치 그 자체를(실기억) 보다 효과적으로 쓰기 위한 실기억관리
구획방식
- 고정구획방식
주기억장치를 사전에 정한 크기의 구획으로 분할하는 방식.
사용률 나쁘지만 처리시간은 일정하고 빠름
- 가변구획방식
주기억장치를 프로그램이 필요한 크기의 구획으로 분할하는 방식.
주기억장치의 사용률은 좋지만, 처리시간이 불안정하여 느림.

또한, OS가 주기억의 영역의 획득, 해방을 반복하는 것으로 미세한 미사용 영역이 발생하는 현상을 플래그멘테이션이라고 함.
플래그맨테이션을 해결하기 위해서는 잘게 잘려진 미사용 영역을 연속된 하나의 영역으로 모아서 다시 이용가능하게 하는데 이걸 메모리컴팩션이라고 함.

스와핑 방식
주기억장치의 용량이 부족한 경우,
실행중의 프로그램 중에 우선도가 낮은 프로그램을 일시중단하고, 자기디스크로 퇴피(스왑아웃)하고,
우선도가 높은 프로그램을 주기억장치에 배치(스왑인)하는 방식.

오버레이 방식
사전에 프로그램을 동시에 실행하지 않는 배타적인 몇 가지의 단위(세그먼트)로 분할하여 두고,
실행시에는 필요한 부분만 주기억 장치에 배치하여 실행하는 방식.

메모리 리크
사용가능한 주기억장치의 용량이 감소하는 것.
메모리 리크를 해소하기 위해서는 불필요한 영역을 해방하는 카베지컬렉션을 행하거나 재기동할 필요가 있음.

가상기억방식
프로그램을 가상기억공간에 격납해 두고,
실행시에 필요한 프로그램이나 데이터를 동적으로 실기억(주기억장치)에 배치하여 실행하는 방식.
주기억장치의 용량 보다 큰 메모리가 필요한 경우 프로그램을 실행할 수 있게 된다.
가상기억상의 번지(가상 어드레스)를 주기억상의 번지(실 어드레스)를 교환하게 되는데,
이 교환을 동적어드레스교환기능(DAT Dynamic Address Translator) 라고 함

페이징 방식
가상기억관리 중의 하나로, 주기억과 프로그램을 固定長(페이지)(데이터의 길이가 일정함 반댓말 가변장) 로 분할하여, 
이 페이지 단위로 관리하는 방식
실행하는 페이지가 주기억에 존재하지 않을 때에는 페이지フォルト(fault)라고 불리는 끼어듦이 발생하고,
불필요한 페이지를 실기억에서 보조기억으로 내보내고(페이지 아웃), 
필요한 페이지를 보조기억장치에서 주기억으로 배치 시킴(페이지 인, 로드)
또한, 페이지폴트가 많이 발생하면 처리확률이 급격히 저하하는 현상을 슬래싱이라고 함.
슬래싱을 피하기 위해서는 주기억의 증설, 잡의 대량도를 낮춰서 주기억의 사용을 제어할 필요가 있음.

페이지 오키카에 치환 알고리즘
부재 횟수가 적은 게 좋음
- FIFO (First-In First-On) 
가장 오래 주기억에 존재하는 페이지를 치환
먼저 들어온 게 먼저 나온다. 먹고 싸기.
★덮어 쓴 써도 최근으로 취급 안 해줌.
- LRU (Least 가장 적은 Recently Used) 
마지막 참조 시간이 가장 긴 페이지를 치환
페이지 프레임 중에 가장 오랫동안 사용되지 않은 애를 지우고 새로운 애 들어감
LFU (Least 가장 적은 Frequently 자주 Used) 
참조회수가 가장 적은 페이지부터 치환

문제1)
페이징 방식의 가상기억을 이용하는 방법의 효과는 어느 것
ㄴ. 처리에 필요한 페이지를 동적으로 주기억에 할당하는 것으로 주기억을 보다 효과적으로 사용할 수 있음

문제2)
가상기억 시스템의 주기억장치의 용량이 부족할 경우,
프로그램의 다량도를 증가시키면 시스템의 오버헤드가 증가하여,
어플의 프로세서 사용률이 감소하는 현상을 뭐라고 함?
ㄱ. 슬래싱

문제3)
메모리맵에서 세그먼트2가 해방되었을 때, 세그먼트를 이동(동적재배치)하여 분산하는 빈영역을 모아서 하나의 연속영역으로 하고 싶다. 한 번의 메모리악세스는 4Byte로 행하고, 읽기, 쓰기가 각각 30ms가 걸리면 동적재배치를 하는데 필요한 메모리 악세스 시간은 합계 몇 ms 인가
1kByte는 1000Byte로 함

세그먼트1 / 세그먼트2 / 세그먼트3 / 빈공간
500kByte     100kByte    800kByte   800kByte

세그먼트3의 뒤쪽에 있는 100kByte 만큼을 세그먼트2로 옮기면 됨.
근데 세그먼트3 전체에 악세스 해야하니 800Kbyte / 4Byte = 200*10^3회의 악세스가 필요
읽고, 쓰기 각각 필요하니 200*10^3 * 30ms * 2 = 12ms

문제4)
가상기억방식의 실기억에 할당하는 페이지 수를 3으로 하고,
오이다스 페이지를 선택하는 알고리즘을 FIFO, LRU 두 가지로 하였을 경우, 오키카에 횟수로 알맞은 것.
1, 3, 2, 1, 4, 5, 2, 3, 4, 5
FIFO 3회
LRU 6회

문제5)
메모리 리크의 설명으로 적절한 것
ㄱ. OS나 어플의 버그 등이 원인으로, 작동중에 확보한 주기억장치가 개방되지 않아
이것이 발생하면 주기억장치의 이용가능한 부분이 감소한다.

2-4. 파일 관리
계층구조의 최상위에 있는 디렉토리를 루트디렉토리,
디렉토리 하위에 작성된 디렉토리를 서브디렉토리
현재 조작대상인 디렉토리를 카렌토 디렉토리
/next/child/page.html

루트 디렉토리 /
서브디렉토리 next, child

파스 지정
- 절대 파스
루트 디렉토리를 기점으로 목적 디렉토리로 향하는 것
- 상대 파스
카렌토 디렉토리를 기점으로 목적 디렉토리로 향하는 것

/가 파스명 선두에 있을 경우 왼단에 루트디렉토리가 생략되어있는 것으로 봄
한 단계 위로 갈 경우에는 ..를 사용함

2022-11-07
목표 130페이지

데이터 백업
자기디스크의 장해 등에 대비하여 정기적으로 데이터를 백업
- 풀 백업 1234
자기디스크에 존재하는 모든 데이터를 백업
- 사분 백업 1    234
이전 풀백업 이후에 갱신된 데이터를 백업
- 증분 백업 1    2    3    4
이전 백업 이후에 갱신된 데이터를 백업

문제1)
백업방식의 설명 중 증분백업은 어느 것인가
ㄷ. 직전에 행해진 백업 후, 파일 갱신을 표시하는 정보가 있는 파일만 백업하고, 파일 갱신을 표시하는 정보를 리셋함

문제2)
사진 구성으로 관리 되고 있다.
/B/A/B가 카렌토 디렉토리가 되는 것은 카렌토 디렉토리를 어떻게 이동시킨 경우인가.
/A -> ../B -> ./A/B
대충 보고 따라가면 됨
점 하나는 카렌토 디렉토리
..은 상위 디렉토리

2-5. 멀티미디어
사진(静止画せいしが), 동영상
사진
- BMP
마이크로(윈도우즈)의 표준
압축되어 있지 않기 때문에 용량이 큼
- GIF
256색, 가역압축
- PNG
256색(PNG-8), 풀컬러(PNG-24) 2종류
가역압축, 부분적으로 투명하게하는 것이 가능.
웹용 이미지
- JPEG
국제표준규격. 풀 컬러.
불가역압축. 사진 등에 쓰임

동영상
- MPEG
국제표준규격.
MPEG-1는 오디오CD
MPEG-2는 DVD나 디지털방송용 규격
MPEG-4는 MPEG-2보다 압축률 좋음 H.264/MPEG-4 AVC규격화 되어 있음
원세그 방송에 사용되는 동영상 압축기술

MP3는 MPEG1의 음성부분을 압축 알고리즘을 이용하여 만든 음성 데이터

이미지 데이터에는
사진 등과 같이 픽셀을 모아 이미지를 표현하는 라스타데이터,
좌표의 위치나 곡선의 길이 등을 이용하여 연산으로 표현하는 백터데이터
2종류가 있음
BMP, GIF, PNG, JPEG 등은 라스타 데이터, 비트맵폰트는 라스타데이터
아웃라인폰트는 백터데이터

SVG (Scalable Vector Graphics)
矩形(직사각형)이나 원, 직선, 문자열 등으로 도형 오브젝트를 XML으로 기술하고, 
Web페이지에서의 도형 묘화(描画 びょうが)에도 사용이 가능한 이미지 포멧.
백터데이터이고, 확대해도 ジャギー는 발생하지 않음

멀티미디어의 응용
CG (Computer Graphics)
컴퓨터를 사용한 이미지, 동영상을 처리, 생성하는 기술 또는 그 이미지, 동영상

- 안티 에이리아싱 ( anti aliasing )
대각성, 곡선 등에 발생하는 기자기자(쟈기-)가 눈에 띄지 않게 함
- 텍스쳐 맵핑
물체 표면에 벽지 같은 문양으로 질감을 입혀 입체감을 냄
- 쉐--딩구
물체 표면의 그림자를 표현
- 레이 트레싱구
물체의 광원으로의 반사, 투과를 표현함 대머리 반짝반짝
- 크리핑구
동영상 표현 영역에 윈도우를 정의하여, 윈도우 내의 보이는 부분만을 뽑아냄?
- 모-휭구
어느 영상에서 다른 영상으로 매끄럽게(滑らか なめらか) 변형시키기 위해서 그 중간 단계를 만듦
- 렌더링
물체에 데이터로서 부여되어 있는 정보를 계산하여 영상화 함
- 폴리곤
입체의 형상을 표현할 때에 사용하는 기본적인 요소.
삼각형이나 사각형 등이 사용된다.
- 모션 캡쳐
센서 이용해서 사람, 동물 움직임
- 솔리드(소릿도) 모델
물체의 안을 채운 형태로 표현
- 와이어 프레임
물체를 정점(꼭지점) 끼리의 선으로 표현
- 서페스 모델
물체를 선이나 곡면의 집합으로 표현

VR
버츄얼 리얼리티
가상 공간에 들어가는 듯한 효과를 내는 기술
[가상공간]

AR
(Augmented Reality)
눈 앞에 있는 현실의 정보나 정경이나 풍경의 영상을 컴퓨터에 집어 넣어
실제로 존재하지 않는 가상의 정보를 합성한 기술
[확장현.실.]

문제1)
H.264//MPEG-4AVC의 설명

문제2) 
액정 디스플레이 등의 표시장치에서 기울어진 직선의 경계를 부드럽게 표시하는 기술
안티 에일리싱

문제3)
AR의 설명으로 가장 적절한 것은?
실제 눈 앞에 있는 현실의 영상의 일부에 컴퓨터를 사용하여 가상의 정보를 부가하는 것으로
확장된 현실의 환경을 체험할 수 있음

ㅇㅇㅇㅇㅇ3. 기초이론ㅇㅇㅇㅇㅇ
2진법, 8진법, 16진법 더하고 빼고
16진법 C가 12, 15가 F
2^0 = 1

진법끼리 변환하고 쿵짝쿵짝
2진수 -> 8진수는 3자리씩 끊어서
2진수 -> 16진수는 4자리씩 끊어서

10진수 -> 2진수, 8진수, 16진수
정수부분은 나눠지지 않을 때 까지 계속 나누고,
소수부분은 0 또는 반복 수가 나올 때 까지 계속 곱하고

그냥 변환 잘 모르겠으면 2진수 거쳐서 바꿔

문제1)16진소수 2A.4C와 等しい(ひとしい) 것은?
2진수로 표현해봐라

문제2)
2진수 1.1011 과 1.1101을 가산한 결과를 10진수로 나타내면?
3.5

문제3)
10진수의 분수 1/32를 16진수의 소수로 나타내면?
0.08(16)

문제4)
다음의 10진소수 중 2진수로 표현하면 무한소수가 되는 것은?
0.05

문제5)
어느 모텔은 객실을 1,000부실을 가지고, 부실번호는 숫자 4와 9를 사용하지 않고 0001에서 순서대로 4자리의 숫자를 가진다.
방 번호가 0330인 방번호는 몇 번째 부실인가.
216

3-2.보수의 개념
덧셈 밖에 모르는 컴퓨터를 위해서 만든 개념(뺄셈, 음수(負数ふすう)를 나타내기 위해서)
456의 9의 보수란?
456에 각 자리수에 얼마를 더해야 9가 되는가? 543
534은 456의 9의 보수
9의 보수, 10의 보수
10의 보수는 올림수 까지 생각할 것
123의 10의 보수는? 877

이와 같은 개념이 2진수에도 존재
1의 보수, 2의 보수
1의 보수는 0 -> 1,  1 -> 0 바꾸는 것으로 구할 수 있고
2의 보수는 1의 보수 +1 하는 것

ex) 10진수 -25의 
1 0011001 (부호화 절대치)
1 1100110 (1의 보수)
1 1100111 (2의 보수)

고정소수점
소수점의 위치를 결정된 장소에 고정하여 표시하는 것
부호 비트 + 데이터비트
부호비트 0은 음수, 1은 양수
2진수 8비트를 고정소수점으로 나타내면
0 0101101
이런 식


문제1)
2의 보수로 표현한 음수 10101110의 절대값은 얼마인가
제일 왼쪽은 부호니까 그대로
1 0101101 (1의 보수) 1을 뺌
1 1010010 (부호화 절대치) 역수
인데 그냥 절대값을 물었으니 01010010

문제2)
음수 2의 보수로 표현할 때 모든 비트가 1인 n비트의 2진수 111....11이 표현되는 값 또는 수식은 무엇인가
111...111 최상단 비트가 1이므로 음수
1 1111...1110 (1의 보수)
1 0000...0001 (부호화 절대치)
인데 그냥 값을 물은 것 같으니 -1

문제3)
10진수 -5.625를 8비트의 고정소수점 2진수로 표현한 것은 무엇인가.
소수점 위치는 3비트와 4비트 사이에 있고, 음수는 2의 보수로 표현함
0비트부터 시작하는 것을 기억하시오
답은 10100110

3-3.부동소수점
부동소수점은 실수를 표현할 때 사용하는 형식
부호부 / 지수부 / 가수부(소수부)
지수부 비교 후 크기가 다르면 지수부가 큰 쪽의 가수부에 일치 시킴
이걸 정규화라고 부름

문제1)
0이하의 수치를 부동소수점으로 표현할 경우, 가수부의 최상위 자리가 0 이외가 되도록,
자리 맞추는 조작은 어느 것인가.
- 정규화


切上げ 올림
切捨て 내림
四捨五入(ししゃごにゅう) 반올림



3-4. 오차
케타 아후레 오차
연산 결과가 컴퓨터가 표현할 수 있는 범위를 넘어선 경우
오버플로
언더플로는 부동소수점에서 한 없이 0에 가까워져서 표현할 수 없게 되는 것

마루메 오차
지정된 자리수로 연산결과를 표현하기 위해 올림, 내림, 반올림 등을 행한 것으로 발생하는 오차

케타 오치 오차
절대값이 거의 같은 값으로 같은 부호의 뺄셈이나 다른 부호의 덧셈을 한 경우에
유효 자릿수가 줄어드는 것으로 발생하는 오차

유효 자릿수란?
측정치를 어느 자릿수까지의 표현으로 더 정확히 나타낼 거냐
체중계 100이냐 101이냐 100.5냐
100.5의 경우 유효자리수는 4자리수

정보 오치 오차
절대값의 차가 비정상적으로 큰 수치 간의 덧셈, 뺄셈의 경우,
절대값의 작은 수치가 계산결과에 반영되지 않는 것을 의미함.
0.1 * 10^2+ 0.0000000001* 10^2 => 정규화 => 0.1 * 10^2
이 정보 오치 오차를 줄이기 위해서는
계산할 값들을 절대값의 오름차순(昇順 しょうじゅん)으로 정렬 후 계산하면 됨
내림차순은 降順 こうじゅん

우치키리 오차
부동소수점의 계속됨을 지정한 규칙의 우치키리로 행할 경우 발생
3.14159... -> 3.14

문제1)
부동소수점 표현으로 가수부 23비트인 불라불라
정보 오치가 발생한 계산은 어느 것?
(1.01)2진수 * 2^18 + (1.01)2진수 * 2^-5
-> 절대값의 차이가 가장 큰 것

문제2)
케타 오치의 설명으로 적절한 것
ㄱ. 값이 거의 같은 부동소수점 끼리 가산을 한 경우, 유효자리수가 큰 폭으로 줄어들고 만다


3-5. 시프트 연산
좌우로 비트를 틀어서 시프트하여 곱셈乗算じょうざん, 나눗셈除算じょさん 등의 연산을 하는 것

n비트를 왼쪽으로 -> 2^n배
n비트를 오른쪽으로 -> 1/2^2배

그냥 왼쪽은 커지니 2^n 곱하고, 오른쪽은 2^n 나누고

- 논리 시프트
부호를 고려하지 않고 시프트 계산
넘치는 비트는 버려지고, 모자란 비트는 0을 채움

- 산술시프트
부호를 고려하여 시프트 계산
부호는 그 자리에 그대로 두고 부호 자리 건너 뛰고 넘치는 비트 버리고, 모자라면 0 채우고

문제1)
정의 2진정수를 왼쪽으로 4비트만 케타이동(시프트)한 결과는 원래의 수의 몇 배인가.
16배

문제2)
32비트의 레지스터에 16진수 ABCD가 들어가 있을 때, 2비트만 오른쪽으로 논리시프트한 값은?
2AF3

문제3)
10진수의 연산식 7 / 32의 결과를 2진수로 표현하면?
논리 시프트 이용하면 편함
0.00111

문제4)
수치를 2진수로 표현한 레지스터가 있음
이 레지스터에 격납된 정의 정수 x가 10배가 되는 조작은 어느 것?
단, 케타아후레는 일어나지 않는다고 가정
ㄱ. x를 2비트 왼쪽으로 시프트한 값에 x를 가산하고, 사라니 1비트를 왼쪽으로 시프트한 것
계산하면 10x 나옴

3-6. 논리 연산
1, 0
참, 진(真しん？　偽ぎ？)

논리회로는
MIL신호로 도식화(図式化) 화살표 모양있는 그거
닌리치표는 표로 1, 0 관계
벤다즈는 벤다이어그램

논리와 OR
D에서 움푹 들어감
A+B
합집합

논리적 AND
D
A・B
교집합

부정 NOT
삼각형 끝에 하얀 원
A위에 선 찍
차집합


베타적논리와
EOR, XOR
움푹 들어간 D 왼쪽에 선 하나
A⊕B = 
    ---  ---
A * B + A * B
남자와 여자가 있으면 1이 됨
합집합에서 차집합을 뺀 것

부정논리와
NOT
논리와 끝에 하얀 원
A+B 위에 선 찍
전체에서 A와 B의 차집합
진리표는 합의부정

부정논리적
NAND
D 끝에 하얀 원
논리적의 부정
전체에서 A와 B 교집합을 뺀 것

비트 연산
비트열을 뽑아낼 경우
뽑아내고 싶은 비트 자릿수에 1을 AND하면 나옴

비트의 반전
특정 비트 자리수에 반전을 하고 싶을 때에는 1을 XOR(EOR) 하면 됨

드모르간의 법칙
위에 차집합 쪼갤 때 생각하자 드모르간
-----     ---   ---
A+B  =  A  *  B
---     ---    ---
AB  =  A  +  B

멱등법칙
같은 곱이나 같은 합은 같다
부정의 부정은 그대로

분배법칙
보통 수학에서 쓰이는  A (B + C) = A B + A C 말고 
 A + (B C) = (A + B) (A + C)도 가능함
 와우 놀라운 걸

명제란 참인지 거짓인지 판별할 수 있는 객관적인 상태

문제1)
P, Q, R은 어느 것도 명제이다.
명제P은 진리표는 참이고,
명제 (NOT P) OR Q 및 명제 (NOT Q ) OR R은 어느 명제도 참이다.
Q, R의 진리표는 무엇인가.

문제2)
8비트의 값 전체를 반전하는 조작은 무엇인가.
16진수표 FF를 배타적논리합을 하면 됨

문제3)
 ------------------
 --                --
 (A + B) ・(A + C) 
과 같은 것은 무엇?
    ---  ---
A * B + A + C

문제4)
그림의 논리회로와 같은 회로는 어느 것?
참 거짓 넣어보면 나옴
XOR 그림 기억

3-7. 반가산기와 전가산기
가산기는 2진수의 가산을 행하는 회로입니다.

- 반가산기
두 가지의 2진수를 가산하여 같은 자릿수의 수 (S)과 자릿수 올림 (C) 를 출력하는 가산기입니다.
  C
    X
+  Y
------
  AS
자리올림수 C, 가산한 같은 자릿수 S만 신경 쓰면 됨.
설령 A가 나와도 신경 X

입력값 2개, 출력값 2개
논리회로는 하나의 AND와 하나의 XOR를 조합한 회로
X Y C S 입출력 관계는 직접 해보면 됨

-전가산기
입력3, 출력2
한개의 전가산기를 구성하는데 최소 2개의 반가산기가 필요함 + 자리올림수에 OR 추가 연결

문제1)
반가산기 진리표 던져주고  C와 S의 관계식을 구하라는 건데 그냥 직접 넣어보면 됨

문제2)
반가산기는 하나의 AND와 하나의 XOR로 이루어져 있다.

문제3)
전가산기 x y z 와 c s의 관계
x = 1
y= 0
z = 1
넣었을 때의
c와 s의 값은?
c는 자리 올림, s는 와로 한다.
c = 1
s = 0

3-8. 계측과 제어
아날로그와 디지털
연속적으로 변화하는 정보를 아날로그데이터
연속하는 아날로그 데이터를 상세하게 구분하여 0과 1로 바꾼 불연속적인 정보를 디지털데이터

A/D 교환
아날로그 데이터와 디지털 데이터를 교환하는 것.
휴대폰에 들어있는 디지털 정보를 소리라는 아날로그 정보로 바꾼 후 출력

PCM 전송방식
Pulse Code Modulation  파루스 부호 변조 방식
아날로그 음성신호를 디지털 부호로 교환하는 방식
표본화 -> 양자화 -> 부호화

- 표본화
연속적인 아날로그 신호 파형을 일정 시간 간격으로 검출하는 단계
연속된 아날로그를 끊어서 표현
샘플링이라고도 부름
1초당 샘플링 회수를 샘플링 주파수라고 하며, 단위는 Hz를 씀
예를 들어 CD 샘플링 주파수가 44.1kHz라면 1초당 44.1 * 10^3 회 샘플링 측정함
표본화 간격 = 1 / 표본화 횟수
(표본화 횟수 : 2 * 최고 주파수) 이건 안 보는 게 좋을 듯

- 양자화
측정한 신호를 미리 정해놓은 일정 간격으로 쿠기리 수치화 하는 것

- 부호화
양자화로 얻은 값을 2진수의 디지털부호로 변환하는 것
여기서 샘플링 주파수 주기가 짧을 수록(샘플링 주파수치가 높을 수록), 양자화 단계수가 많을 수록
원래의 음질에 가까워 짐

제어기술
- 피드백 제어
환경 등 외부의 작용(外乱)의 영향을 센서로 검치하여, 컴퓨터가 판단해 수정동작을 행하는 제어
- 피드포워드 제어
외부작용이 예상될 경우 마에못떼 필요한 수정동작을 행하는 것
- 시퀀스 제어
미리 정해놓은 순서 또는 조건에 따라 제어의 각 단계를 逐次(ちくじ) 진행하는 것

컴퓨터 제어에는 이런 요소가 필요함
- A/D 컨버터
아날로그 전기 신호를 컴퓨터가 처리 가능한 디지털 신호로 바꿈
- 센서
히즈미(뒤틀림) 게이지
絶縁(ぜつえん)체의 표면에 붙인 금속박(箔)의 전기저하의 변화로 물체의 형체를 검출
쟈이로 센서
단말의 각속도(회선의 속도)나 기울어짐, 진동을 검
인감 센서
인체가 발하는 적외선이나 초음파를 이용해 존재를 감지
- 아쿠츄에-타
컴퓨터가 출력한 신호를 회전운동, 직선운동 등으로 바꾸어줌
실린더나 모터 등
- 앰프
마이크로폰이나 센서가 출력한 매우 작은 전기신호를 증폭시킴

PWM
 (Pulse Width Modulation) 
 모터의 회전속도나 LED의 밝기 등을 디지털 신호로 제어하는 방식
 시간에 따른 전압 0,1로 높이 표현하고 1이 얼마나 유지되는가(주기)에 따라 모터의 속도, LED 밝기가 강해짐
 
 크록 신호
 예를 들어 전압과 시간의 관계를
 전압이 높아지는 지점을 올리고, 전압이 낮아지는 지점을 내리는 식으로 표현
 
 
 전력량
 1A * 1V = 1W
 전력량은 Wh
 소비전력 100W라는 말은 시간당 100W를 쓴다는 말
 
 
 문제1)
 드론에 사용되는 쟈이로센서가 검출할 수 있는 것
 ㄴ. 드론의 각속도

문제2)
악츄에이터의 설명
에네르기 발생원에서의 파워를 제어신호에 기초로 하여? 한국 말이 안 나오네;;
회전, 並進へいしん(전진, 나아감) 등의 움직임으로 바꿈

문제3)
PCM방식의 음성을 샘플링(표본화)한 8비트의 디지털 데이터를 변환하여, 
압축없이 리얼타임으로 전송하였을 때, 전송속도는 64,000 bit/s였다.
이 때 샘플링 간격은 몇 마이크로 초인가.

변환한 데이터의 초당 64,000bit의 양.
8비트의 디지털 데이터로 양자화 했으니,
1초당 샘플링 횟수는
64,000 / 8 = 8000회
표본화 간격 = 1 / 표본화 횟수
1 / 8000
= 0.000125초 = 125 마이크로 초

문제4)
8비트 D/A 변환기를 사용하여 負가 아닌 전압을 발생시킨다.
최하위의 1비트의 변화로 출력이 10미리 볼트 변화한다.
데이터에 0을 부여하였을 때의 출력은 0미리 볼트로 함.
데이터에 16진수 82를 부여하였을 때 출력은 몇 미리 볼트인가.
그냥 10진로 바꿔서 10미리 볼트 곱했음;
1300미리 볼트


문제5)
크록의 타치아가리 엣지로 8비트의 시리얼 입력 파라레루 시프트 레지스터의 내용을 상위방향으로 시프트하면
동시에 정논리의 데이터를 레지스터의 최하위 비트에 읽어들인다.
또, 스토로-브(섬광 장치)의 타치아가리 엣지에 값을 확정한다.
각 신호의 파형을 관측한 결과가 다음의 이미지일 때, 확정 후의 시프트 레지스터의 값을 얼마인가.
수치는 16진수로 표현한다.

스트로브가 올라간 순간이 데이터 확정되는 순간이니 확정되기 전의 8비트가 확정된 값.
정논리이므로 데이터 올라간 게1, 내려간 게 0
이미지 8비트 세보면 10001101 이므로 16진수는 8D


3-9. 오토마톤 이론
현재의 상태와 입력에 의해 출력이 결정되는 기계를 모델화하는 것
[돈 투입을 기다림 -> 투입되면 상품 선택을 기다림 -> 선택된 상품을 뱉고, 다시 처음 돈 투입 기다림 상태로 돌아감]
이와 같이 몇 가지의 상태로 전이하는 것을 오토마톤 표시열
초기단계에서 몇 가지의 단계를 거쳐 최종적으로 수리상태(종료상태)가 된 것을 유한 오토마톤이라 함
이 오토마톤 전이를 그림으로 표현한 것이 [상태전이도], 표으로 표현한 것이 [상태전이표]
→〇초기 상태
◎ 수리상태
     1         0
→〇A -----> 〇B ------> ◎C------->〇D
   ↺                                             ↺
    0                                             0,1
상태전이도
현재 A상태에서 1을 입력하면 B로 이동한다
현재 A상태에서 0을 입력하면 A그대로 남음
[10] 으로 수리상태가 됨
최단거리가 아닌 듯?

표는 그냥 보면 앎


문제1)
설계할 때에 상태전이도를 사용하는 것이 가장 적절한 것은?
ㄹ. 설계한 센서의 정보로 온실내의 환경을 최적으로 유지하는 온실 제어 시스템

문제2)
300엔의 상품을 판매하는 자동판매기의 상태는 어느 것인가.
입력과 출력의 관계는 입력/출력이라고 표시
입력의 a는 100엔경화(硬貨こうか), b는 100엔 경화 이외로 표시
S0~S2는 상태를 표시
입력이 b인 경우는 바로 경화를 뱉음
또, 종료상태에 전이할 때에는 출력의 1은 상품의 판매, 0은 아무것도 하지 않음
(초기와 수리 상태가 같을 수도 있음)

문제3)
현재 공백 숫자 부호 소수점 그외
그냥 풀어보면 됨 불합격 되는 거
차례대로 현재 상태에서 가보면 됨

3-10. AI
(Artificial Intelligence) 
사람이 행하는 학습, 인식, 예측, 판단 등의 지적인 활동을 컴퓨터에게 시키는 것, 그 기술

기계학습
대량의 데이터(빅 데이터)를 컴퓨터에 분석시켜 컴퓨터 스스로 예측과 판단 등을 할 수 있도록 학습시키는 것

교사 있음 학습
미리 문제와 정답, 오답을 컴퓨터에 제시하여 컴퓨터가 스스로 그것들의 특징을 학습하는 것

교사 없음 학습
컴퓨터 스스로가 총계적 성질이나 어느 종류의 조건에 따라 데이터의 그룹화(크라스터링), 정보의 집약을 행하는 것
스스로 개의 사진을 한 그룹에 모으고, 고양이의 사진을 한 그룹에 모은 후 물고기 사진 주면? 이건 또 다른 걸로 분류

강화학습
試行錯誤(しこうさくご)를 통하여 보수를 가장 많이 얻을 수 있는 방책을 학습하는 것

딥러닝
사람의 뇌신경회로를 모방模倣(もほう)한 모델(뉴럴 네트워크)으로 분석하여
AI 스스로가 데이터를 판별할 수 있기 위한 특징을 찾아내는 것
심층학습이라고도 함

문제1)
생산현장의 기계학습의 활용사례로 적절한 것은?
ㄷ. 공장의 생산로봇에 대하여 작업방법을 프로그래밍하는 것이 아닌, 로봇 스스로가 배워 작업의 효율을 높인다.

문제2)
기계학습에 있어서 교사 있음 학습의 설명으로 가장 적절한 것은?
ㄷ. 정답의 데이터를 제시하거나, 오답 데이터를 제시하는 것으로 미지의 데이터에 대하여 정오를 얻을 수 있게 돕는 것

3-11. 선형대수
선형대수는 수학의 행렬을 취급하는 학문
스카라 - 크기를 표시하는 수치
배쿠토루 - 수치 즉, 스카라를 1열로 세운 것
横로 세우면 행백터
縦로 세우면 열백터
백터를 구성하는 요소를 성분이라고 부름

행렬 덧셈, 뺄셈 그냥 같은 자리 끼리 하면 됨

행렬의 스칼라배
행렬 A의 2배, 1/3배는 그냥 각 자리수에 곱해주면 됨

행렬끼리의 곱셈
 2*2 x 2*2인 경우
 a11b11+a12b21 a11b12+a12b22
 a21b11+a22b21 a21b12+a22b22
 
A
(3 4 6)
(6 5 1)
B
(1 2)
(1 4)
(1 6)
A * B가 가능한 경우는 A의 열수와 B의 행수가 같아야 함
m * n, n * p인 경우 결과값은 m * p가 됨

역행렬
행과 열이 같은 수가 되어있는 것을 정방행렬
또, 왼쪽 위 대각선에서 오른쪽 아래로 내려가는 성분이 1, 나머지 0이면 단위행렬
(1 0)
(0 1)
정방행렬에 단위행렬을 곱하면 원래 정방행렬 그대로 나옴

행렬 A에 행렬B를 곱하여 단위행렬이 나온 경우,
행렬B는 행렬A의 역행렬이라고 함 A^-1
A * A^-1 = 단위행렬

단위일차방정식
2x + 3y = 4
5x + 6y = 7
에서 x항의 계수, y항의 계수 및 정수만을 뽑아낸 표(행렬)을 만들어
기본조작1에서 3의 어느 것을 순서대로 施す(ほどこす) 것에 의해
해
x = -1
y = 2
를 얻을 수 있었다.
행렬이 다음과 같이 왼쪽에서 오른쪽으로 이동할 경우,
같은 종류의 조작이 행해진 장소의 조합은 어느 것인가.

1. 어느 행에 0이 아닌 수를 곱했다.
2. 어느 행과 다른 행을 바꿨다.
3. 어느 행에 다른 행의 정수배를 더했다.

       →a        →b         →c         →d
2 3 4     2 3 4      1 0 -1     1 0 -1      1 0 -1
5 6 7     1 0 -1     2 3 4      0 3 6       0 1 2  

a는 2 3 4행에 -2를 곱하여 5 6 7에 더했음 따라서 3.
b는 서로 바꿨으니 2.
c는 1 0 -1행에 -2를 곱하여 2 3 4에 더했으니 3.
d는 0 3 6행에 1/3을 곱했으니 1.


3-12. 확률과 통계
          어느 사상이 일어난 경우의 수
확률은  --------------------------------------------
          起こりうる일어날 수 있는 모든 경우의 수

경우의 수
복수의 경우의 수가 동시에 일어날 경우 곱한다
복수의 경우의 수가 따로 일어날 경우 더한다

순열
서로 다른 n개의 원소에서 r개를 선택하는 것 (순서 상관 ㅇ)
           n!
nPr = ---------
         (n-r) !

볼 5개 중에 2개를 순서 생각하여 뽑는다.
5P2 = 
  5 !
-------  =20
(5-2) !

순서를 생각한다는 말은 이 둘은 다르다는 말
①②
②①


조합
서로 다른 n개 중에 r개를 선택하는 것(순서 상관 X)
           n!
nCr = ----------
        r !  (n-r) !
공 5개 중 2개를 순서 상관 없이 뽑는다.
5C2 = 
  5 !
----------  = 10
2! (5-2) !


- 메지안(중앙치)
데이터 정렬하여 중앙에 있는 값
偶数(짝수)
奇数(홀수)
중앙에 있는 값의 개수가 짝수인 경우는 두 값의 평균치

- 모드(최빈치)
출현빈도가 가장 많은 값

- 렌지(범위)
데이터의 최소값에서 최대값 까지의 범위
45 55 65 69 70
70 - 45 = 25

- 분산
{(45 - 60)^2 + (55 - 60)^2 + (55 - 60)^2 + … +(70 - 60)^2} / 8= 68.75

-표준편차
분산에 루트 씌운 것
√68.75
표준편차가 작으면 평균치 근처에 모여있다는 말

- 정규분포
평균치를 중심으로 하여 좌우 대칭의 종소리 모양의 분포
평균치 60, 표준편차 10
50~70에 많이 모인 종모양


문제1)
프로젝트 멤버 16명일 때, 1대1의 총아타리로 프로젝트멤버가 서로 카오아와세할 경우,
총 延べ 몇 時間(그냥 필요한 시간의 합계?)
1회에 0.5시간 소요한다고 가정

16명 중에 두 명을 뽑는 거고, 순서는 상관 없으니 16C2 = 120
120 * 0.5시간 = 60시간

문제2)
어느 공장에서 같은 제품을 독립한 두 라인 A, B에서 제조하고 있다.
A에서는 제품전체의 60%, B에서는 40%를 제조하고 있다.
A의 불량률은 2%, B의 불량률은 1%
이 공장에서 만들어지는 하나의 제품을 무작위로 추출抽出(ちゅしゅつ)  했더니 불량품이었다.
이 제품이 A라인에서 만들어졌을 확률은?
75%

그냥 계산해도 나오고,
쉽게 전제로 전체 1000개로 가정해서 불라불라

문제3)
Random (n)은 0이상 n미만의 정수를 일정한 확률로 반환하는 함수
정수형의 정수A, B, C에 대하여 다른 순서로 실행하였을 때, C의 값이 0이 될 확률은 얼마인가.
A = Random(10)
B = Random(10)
C = A - B
1/10

A=B=1
A=B=2
A=B=3
...
총 100가지의 경우의 수 중 10가지니까 1/10

문제4)
p점 - r점 - q점 최단거리
1  2  3
1  1  1
이걸로 구하는 게 제일 쉬운 듯
굳이 쓸 거면 조합
4C2 * 5C2

위1 위2 오3 오4
나
위2 위1 오4 오3
은 같은 거니까 순서 상관 없는 조합 쓰는 거

문제5)
수험자 1000명 중 4교과 테스트 결과를 표로 나타냈다.
어느 교과의 득점분포도 정규분포에 따른다고 할 때, 90점 이상의 특점자가 가장 많다고 추측할 수 있는 교과는 어느 것?

교과 평균점 표준편차
A       45       18
B       60       15
C       70       8
D       75       5

27 63 
45 75
62 78
70 80
이 범위 안에는 68%가 포함되고,

45-18*2   45+18*2
....
9 81
30 90
54 86
65 85
이 범위 안에는 95%가 포함 됨
따라서 90점 이상의 분포자가 가장 많은 건 교과 B

4. 알고리즘과 프로그래밍
4.1 알고리즘
변수
데이터 격납 공간
1 - > NUM

원 
개시 종료

사각형
임의의 처리

삼각형
판단

루프단
사각형 위 아래 짤린 거

①順次

②選択
・双岐선택 : 2개
・多岐선택 : 3개 이상

③繰り返し
・전판정 반복:처리 전에 조건문이 있어서 조건에 해당되면 처리 후 조건 전으로
・후판정 반복:처리 후 조건문에 해당되면 처리 전으로 돌아감


구조체 알고리즘?
프로그램 전체를 기능별로 분할하여 처리의 제어구조를 순차, 선택, 반복 만을 이용하는 것을
원칙으로하는 프로그래밍

알고리즘에 따라서 변수의 변화를 추적하는 것을 트레이스라고 함

N%2 = 0
나눗셈의 나머지가 0
j mod 2 나머지
j div 2 정수부

의사(疑似),유사언어
오후 문제에서 필수 알고리즘으로 나오는 건 플로챠트가 아니라 이 의사언어

〇 처리(테츠즈키), 변수 등의 이름, 형태 등을 선언
/* 주석 */

처리
・변수 <- 식 : 변수에 식을 대입
・처리(변수, 등) : 처리를 불러내며 인수를 집어 넣음

↑조건식     : 단기선택처리
 |    처리
↓

↑조건식     : 다기선택처리
 |    처리1 (참)
-----------
 |    처리2 (거짓)
↓

 ▪  조건식   :  전판정반복처리
 |     처리
 ▪

 ▪              :  후판정반복처리
 |       처리
 ▪    조건식   

 ▪   변수:초기치,         :  반복처리
 |       조건식,
 ▪       증분처리


----------------------------------------------------------------
〇프로그램 명 : 1 , 2 , 3 .... 100 중 짝수 수치의 합계를 구하여라
〇변수형 : SUM
〇변수형 : N

・N <- 1
・SUM <- 0
 ▪ N ⪯ 100
 |  ↑ N % 2 = 0
 |   |    ▪ SUM = SUM + N  
 |  ↓
 |   ▪ N <- N+1
 ▪
----------------------------------------------------------------

판정표
조건과 그 조건에 대한 동작을 표형식으로 정리한 것
Y
N
X
-
d

4-2. 배열
데이터 구조란 데이터를 보다 효과적으로 사용하기 위한 형식

1차 배열
2차 배열
T(1,1) T(1,2)
T(2,1) T(2,2)


문제1)
2차원 정수배열형a의 각요소 a(i, j)의 값은 2i+j이다.
이 때, (a(1, 1) * 2 , a(2 , 2) + 1) 의 값은 얼마인가.
19

4-3. 리스트
리스트의 이미지는 데이터부, 포인터부

단방향 리스트
주소 /데이터 / 포인터 - 주소 / 데이터 / 주소
쌍방향 리스트
전포인터 / 주소/ 데이터 / 후포인터 - 전포인터 / 주소/ 데이터 / 후포인터
★포인터는 포인터를 가르키는 게 아닌 주소를 가르킴

環状리스트 :지네인간3

리스트는 데이터 주소부(격납장소)를 변경 안해도
포인터의 값을 변경하는 것으로 데이터를 추가하거나 삭제할 수 있음

문제3)
선두 포인터과 말미 포인터를 가지고 많은 데이터가 포인터로 이어져 있는 단방향 선형 리스트의 처리 중, 
선두 포인터, 말미 포인터 또는 각 데이터의 포인터를 지나가는 회수가 가장 많은 것은 어느것인가.
단방향의 리스트는 선두 포인터에서 연결되어 있다고 하고,
추가하는 데이터는 포인터를 지나가지 않아도 바로 참조할 수 있다고 함

ㄱ. 선두에 데이터를 추가하는 처리
ㄴ. 선두의 데이터를 삭제하는 처리
ㄷ. 말미에 데이터를 추가하는 처리
ㄹ. 말미의 데이터를 삭제하는 처리
ㅁ-ㅁ-ㅁ-ㅁ-ㅁ-ㅁ-ㅁ-ㅁ-ㅁ
선두                          말미
답은 ㄹ

 4-4. 큐, 스택
 큐는 먹고 싸기
 FIFO
 격납하는 걸 엔큐, 빼내는 건 디큐
 
 스택은 먹고 토하기
 택시 동전 스택 쌓기
 LIFO 나중에 들어온 게 먼저 나감
 PUSH, POP
 
 문제1)
 가감승제를 조합한 계산식의 처리에서 즈택을 이용하는 것이 적절한 처리는 무엇인가.
 ㄴ. 계산의 도중결과를 격납하고, 다른 계산을 행한 뒤에 그 계산결과와 도중결과와의 계산을 행하는 처리
 스택은 처리 도중의 일시적 보존 등에 쓰임
 
 문제2)
 큐에 관한 기술 중 가장 적절한 것은?
 ㄴ. 최초에 격납된 데이터가 가장 먼저 토리다사레루
 
 添え字(そえじ)글자 옆의 작은 첨자를 이용하는 특정의 데이터를 참조
 배열
 
 두 가지 이상의 포인터를 이용하는 데이터의 층계관계를 표현
 나무구조
 
 문제3)
 푸쉬1 푸쉬5 팝 .... 결과
 그냥 풀면 됨
 
 문제4)
 빈 상태의 스택과 큐 두 가지의 데이터 구조체가 있다.
 다음 처리를 순서대로 실행하는 경우, 변수x에 대입된 데이터는 어느 것인가.
 
 푸쉬(a)
 푸쉬(b)
 엔큐(팝())
 엔큐(c)
 푸쉬(d)
 푸쉬(디큐())
 x <-팝()
x에 b가 들어감

4-5. 목조체
트리구조(나무구조)는 계층의 상위에서 하위로 절점을 통하여 데이터를 뽑아내는 게 가증한 데이터 구조

〇 절(노드)
절과 절 사이의 선 에다(브란치)
최상위의 절은 네(루트)
최하위의 절은 하(리프)
나무 뒤집었다고 생각

상위 절 부모, 하위 절 자식
절점에서 왼쪽으로 분기하면 좌부분키
절점에서 오른쪽으로 분기하면 우부분키

2분키의 종류(이진트리)
모든 에다의 분기(직계 자식)가 두 개 이하로 구성된 나무구조

완전2분키
네에서 하까지의 깊이가 모두 같은 2분키
단, 깊이 1차이가 나도, 왼쪽에서 부터 채워진 것도 완전2분키로 봄

2분검색키(나무)
Key 아님 ㅎ;
각 절에서 왼쪽의 자식 < 부모 < 오른쪽의 자식 이라는 관계를 가지는 2분키

루프키
각 절에서 [부모 < 자식](부모, 루트, 네가 최소치) 또는 [부모 > 자식](루트가 최대치) 이라는 관계를 가지는 완전2분키

역 포-랜드 기법(후위표기법)
후치기법은 2분키를 사용한 산술식을 표기하는 방법의 하나.
절에 연산자, 하에 피연산수를 배치하는 것.
좌부분키 -> 우부분키 -> 절점 순으로 산술식이 세워짐
             *
     +              -
  4     3        2     1
  
  (4 + 3) * (2 - 1)
 -> 43+21-*
 괄호 먼저, 서서히 정렬한다는 느낌으로 단계를 거쳐야 됨
 역포-랜드기법은 스택을 사용하여 연산함.
 
 데이터베이스의 인덱스에는 B키나 B+키를 사용함
 B키는 에다의 분기가 2개 이상이고, 데이터 돌입시는 뿌리에서 나뭇잎까지의 깊이가 같게 되도록 각절을 분할함.
 

문제1)
10개의 절(노드)로 이루어진 다음의 2분키의 각절에 1에서 10까지의 값을 적절하게 넣었을 경우,
절 a와 절 b의 값에 알맞은 것은 무엇인가.
각 절에 분배하는 값은 왼쪽 자식 및 그 자손에게 분배하는 값 보다 크게,
오른쪽 자식 및 그 자손에게 분배하는 값 보다 작게 할 것.

              5
          4     a
       -            -
    -     -        b   -
                          -
a = 6, b=7

문제2)
부모 절의 값이 자식 절 값 보다 작은 루프가 있다.
이 루프로의 투입은 요소를 최후부에 추가하고, 그 요소가 부모 보다도 작은 사이, 부모와 자식을 교환하는 것을 반복하면 된다. 다음 루프의 *의 위치에 7을 추가한 경우, a 위치에 오는 요소는 무엇인가.

                 9
          11         14
      24    25   19    28
   29  34  *

* = 11

문제3)
후치방법(역포-랜드기법)으로 다음 식을 표현하면?
Y = (A + B) * (C - D / E)
단계별로, 괄호부터 서서히 정리하면서
YAB+CDE/-*=

4-6.데이터 정렬
소-트
1,2,3,4 상순
4,3,2,1 하순

- 기본교환법(버블소트)
서로이웃된 데이터를 비교하여, 역순이면 바꿈
기준값J, 비교값J+1이 점점 하나씩 올라감
12 비교 23 비교 34 비교 4 고정
12 비교 23 비교 3 고정
...
N(N-1) / 2 

- 기본선택법(선택정렬) (최소, 최대 둘다 쓸 수 있음)
레코드의 최소값을 찾아 첫 번째 위치에 놓고 다음 최소값을 두 번째 위치에 놓는 방법을 반복
맨 앞자리에 있는 기준값 i와 2줄, 3줄, 4줄(비교값 j) 를 순서대로 비교하면서 바꾸면서 반복함
12비교 13비교 14비교 1고정
23비교 24비교 2고정
34비교 3고정
...
N(N-1) / 2 

- 기본삽입법(삽입정렬)
정렬즈미의 바른 위치에 데이터를 삽입함
두열값부터 키값으로 잡고, 기값과 첫열값을 비교해서 해당되면 첫열값이 두열값으로 가고, 키 값이 첫 열로 감
반복
N(N-1) / 2 인데 원래 데이터의 정렬에 따라 작아질 수 있음

- 쉘 소트(개량삽입법)
특정 간격을 두고 뽑아낸 데이터 끼리 정렬
간격 1이 될 때 까지 반복

- 퀵 소트
적당한 기준치를 적하고, 그것보다 낮은 값의 그룹과 그것보다 큰 값의 그룹으로 나누어 정렬하는 방법

- 히프소트
미정렬 부분을 순서나무로 구성하여 그 최대값(또는 최소값)을 뽑아내 이미 정렬된 부분으로 이동시킴


문제1)
퀵소트 설명으로 옳은 것
ㄱ. 대상집합에서 기준이 되는 요소를 선택하고, 그것보다 큰 요소를 집합과, 작은 요소의 집합으로 분할하는 것.
이 조작을 반복하는 것으로 정렬을 행함

문제2)
n개의 데이터를 버블소트를 이용하여 정렬할 경우 데이터 끼리의 비교회수는 얼마인가.
n ( n - 1) / 2

4-7. 데이터 탐색
선형탐색법
배열의 선두에서 순서대로 목적의 데이터를 탐색하는 방법

번병법(番兵法 ばんぺいほう)
탐색하고 싶은 목적의 데이터를 배열의 최후미에 추가하는 방법

2분탐색법
미리 정렬이 되어 있어야 검색 가능
2개 부분으로 나누며 되풀이하여 한 부분은 버리고 남은 부분을 검색하는 방법
1~10에서 9찾기
(1+10) / 2 = 5.5 5와 9를 비교하여 9가 더 크기 1~5를 버림
(6+10) / 2 = 8 8과 비교하여 9가 더 크니 6~8을 버림
이런 식으로 반복

해쉬탐색법
목적의 데이터의 겹납처의 주소, 함수를 이용하여 산출하는 탐색방법
데이터가 저장된 주소를 직접 특정 알고리즘으로 계산하여 산출된 주소로 바로 이동


문제1)
고객번호를 키로 고객데이터를 탐색하는 방법으로 2분탐색을 이용하는 것이 적절한 것은 무엇인가.
ㄷ. 고객번호의 상순으로 배치되어있는 데이터

문제2)
데이터 검색 시, 사용되는 이상적인 해쉬법의 설명으로 적절한 것.
ㄹ. 데이터를 특정의 알고리즘으로 교환한 값을 격납 어드레스로서 이용하여,
고속으로 스케라빌리티의 높은 데이터탐색기술


4-8. 계산량
넘어가욧

4-9. 프로그램의 속성
- 재배치가능(리로케터블) : 주기억장치상의 어느 주소에 배치해도 실행 가능
- 재입가능(리엔트란트) : 동시에 복수의 프로세서가 불러내도 동일한 결과를 얻을 수 있음
- 재사용가능(리유저블) : 실행한 뒤에 재로드 안 해도 다시 사용
- 재귀적(리커시블) : 실행 중 자기 자신을 불러냄

문제1)
복수의 프로그램에서 동시에 불러내도 서로 간섭 없이 병렬로 동작가능한 프로그램의 특징
ㄱ. 리엔트란트(재입가능)


문제2)
자연수 n에 대하여 다음의 재귀함수 f(n)에 5를 입력하면?
f (n) : if n ⪯ 1 then return 1 else return n + f (n - 1) 
15

문제3)
F(231, 15) 의 값은 얼마인가
             3
F (x, y) = x ( y = 0 이면)
             F (y, x mod y) (y > 0 이면)

4-10. 프로그램 언어와 마크업 언어
기계어 0011001100
어셈블리어 기계어에 1:1 대응

베이직 초심자 회화형
코볼 사무처리계산(은행)
C 시스템 기술
C++ C언어 오브젝트 지향
JAVA
파이썬 웹어플, 인공지능 개발에 적절
자바스크립트 동적 웹페이지 구성에 적절한 스크립트언어 HTML과 같이

JVM
자바 가상 머신
자바로 개발된 프로그램을 실행하는 인터프린터

언어 프로세서
사람이 이해할 수 있는 프로그램언어를 기술한 원시 프로그램을 컴퓨터가 이해할 수 있는 기계어로 번역해주는 프로그램
어셈블러
인터프린터 고수준언어로 쓰여진 원시 프로그램을 1줄씩 해석하며 실행
컴파일러 고수준언어로 쓰여진 원시 프로그램을 동적 프로그램으로 해석하여 실행


원시 프로그램    ->    목적프로그램    ->    로드모듈      ->     실행 
                 컴파일러                 링커,라이브러리모듈   로더


컴파일
원시프로그램에서 목적프로그램(오브젝트모듈)을 생성
실행 시의 효율을 높이고 오브젝트 코드를 만들어 실행 시간을 단축하는 게 목적

링크
링커(링케지에디터)라는 프로그램을 이용하여 복수의 목적 프로그램에서 하나의 로드모듈(실행가능프로그램)을 만드는 것

동적링킹
어플의 실행 중, 필요한 모듈을 OS로 연계하는 방법
정적링킹
어플 실행 전에 미리 복수의 목적프로그램을 링크해두는 방법

로드
주기억장치에 로드모듈을 로드하는 것

총합개발환경(IDE)
어플 개발을 위한 소프트웨어, 지원툴의 총집합체
이클립스 등

컴파일이나 링크를 행하여 실행가능한 파일을 생성하는 걸 빌드라고 함

분담하여 코드 작성하고 사전 합의된 장소에 배치하여 빌드, 테스트 반복하는 걸 [계속적 인티그레이션]
빌드, 테스트를 자동화 해주는 Jenkins툴

실행가능한 파일을 실행환경에 인스톨, 각종설정을 하여 이용가능하게 하는 걸 디프로이

형식언어
특정의 목적을 위하여 인위적으로 만들어진 언어
BNF
프로그램언어의 구문을 정의한 재귀적 기법
｜는 또는으로 정의


마크업언어
텍스트 형식의 문장에 태그를 붙이는 걸로 문장의 구성, 문자의 수식 등을 기술
SGML
전자적 문서의 고나리나 교환을 용이하게 해주는 마크업 언어
HTML
웹페이지 작성 어플 CSS
XML
네트워크를 낀 정보시스템간의 데이터 교환을 용이하게 해주는 마크업언어
문장 구조는 문자형정의(DTD)로 기술, 유저가 독자적 태그 정의할 수 있음

Ajax
XML과 자바스크립이 가지는 비동기HTTP통신기능을 사용하여 동적으로 화면에 재묘사하는 방식

문제1)
소프트웨어 총합개발환경
이클립스

문제2)
링커의 기능으로 적절한 것
상호참조의 해결 등을 행하여 복수의 목적모듈을 하나의 모듈로 생성하는 것

문제3)
BNF 정의된 변수명에 합당하는 것
그냥 보고 풀어라

문제4)
HTML에 문자 크기
CSS

문제5)
XML문서의 DTD에 그술하는 것은 어느 것
문서형의 정의

문제6)
파이썬의 특징
ㄱ. 인덴토(들여쓰기)의 깊음으로 코드블록의 범위를 표시
파이썬은 이게 강제되는 구나 몰랐다

5장 
RAID0
스트라이핑
그냥 하드 병렬로 연결해서 하나의 디스크처럼 이용
RAID1
미러링
디스크 2대에 같은 데이터를 넣음
RAID5
데이터를 블록 단위로 복수의 디스크에 분산하여 저장
패리티 분산하여 저장함
1대가 고장나도 문제 없음

플루트 토레란스
(Fault Tolerance)
구성요소를 용장화(병렬)하여 고장이 발생해도 필요한 기능은 대기하고 있는 설계

페일 세이프
Fail Safe
시스템의 일부가 고장나도 위험이 발생하지 않도록 구성하는 설계

페일소프트
(Fail Soft) 
고상이 발생한 경우, 일부의 서비스레벨를 저하시켜, 운용은 계속 되도록 하는 설계

풀 플루프
(fool proof) 
사람이 잘못된 조작을 하여도 고장이 발생하지 않음
전자렌지 문 열고 시작 눌러도 움직이지 작동하지 않음

시스템의 평가 특성
신뢰성
요구된 기능을 규정된 기간 동안 실행할 수 있는가
가용성
요구된 서비스를 계속해서 제공할 수 있는가
보수성
고장시에 용이하게 수리가 가능한가
보전성
정보의 일관성을 가지고 있는가
안전성
정보의 샘이나 분실, 부정사용을 막고 있는가

MTBF
평균고장간격
Mean Time Between Failures
시스템 고장난 후 다음의 고장 까지의 평균시간
고장이 얼마나 안나고 가동이 되었는가이니 높을 수록 신뢰성이 높음
가동시간끼리 더해서 / 구역 수
좋은 거니 분자, 분모 둘 다 넣자

MTTR
평균 수리 시간
Mean Time To Repair
시스템이 고장나고 수리에 들어간 평균 시간
고장시간끼리 더해서 / 구역 수
이건 안 좋은 거니 분자에만 넣자

                    MTBF
가동률 = ------------------
              MTBF + MTTR

6장
관계모델
데이터의 관계를 숫자모델로 나타냄
관계 릴레이션 표
속성 어트리뷰트 열
타푸루 튜플 행
정의역 도메인 값의 형, 범위 등

스키마
데이터의 형식이나 성질, 다른 데이터와의 관계 등의 데이터 정의 집합
3층스키마
외부스키마 최종 유저가 보는 데이터로 개념 스키마에서 필요한 부분만 뽑아냄
개념스키마 개발자가 본 데이터 항목, 구조
내부스키마 기록매체에 데이터를 격납하기 위한 물리적 구조의 정의

DBMS
데이터베이스 관리 시스템
복수의 이용자가 대량의 데이터 동시 사용할 수 있도록 관리

문제2)
관계모델의 속성으로 적절한 것은?
관계내의 속성의 순서는 의미가 없고, 순서 바꿔도 같은 관계를 가진다.
속성? 어트리튜브니까 열이라서


데이터베이스 설계
ER즈
실체(엔티티) 같의 관계(릴레이션쉽)
일대일 -
일대다 ->
다대일 <-
다대다 <->


주키
식별하기 위한 열
중복할 수 없고 널 값 가질 수 없다

외부키
다른 표의 주키를 참조하고 있는 열
참조제약, 참조일관성

문제2)
ER즈 설명
대상으로 하는 세계를 실체와 관계, 이 두 가지 개념으로 표현하는 그림


데이터 정규화
필요한 데이터 항목을 정리하여 중복, 모순을 배제하도록 표를 분할하는 것

비정규 릴레이션
     ｜ 도메인이 원자값
제1정규형 
     ｜   부분 함속 종속 제거
제2정규형
     ｜   이행적 함수 종속 제거
제3정규형

제1정규형 
반복되는 항목을 다른 표로 분할하여, 주키를 찾아냄
한 항목이 복수의 값을 가지거나 타입이 안 맞거나 등
다른 표와의 관계를 가지기 위해 공통의 항목이 각각의 표에 필요함

제2정규형
주키가 된 항목의 일부만으로 결정되는 항목을 다른 표로 분할함
주복합키를 나눈다

제3정규형
주키 이외의 항목에 의해 결정된 항목을 다른 표로 분할함
계산이 요구되는 항목을 삭제함


문제1)
제3정규화 하는 목적은?
융장성(병렬성)을 배제하는 것으로 갱신시의 이상을 회피하기 위해

문제2)
a -> b
a가 결정되면 b가 결정 됨
사원번호가 결정되면 사원명이 결정됨..?
모델 묶는데 부모 자식 끼리 묶자

문제3)
제3정규화 한다고 하면 1,2정규화도 확인할 것


트랜잭션 처리
ACID 특징
원자성Atomicity
트랜잭션 처리가 모두 완료하거나 모두 처리되지 않거나 1 또는 0 중간은 없음
일관성(Consistency) 
디비는 내용에 모순이 없다
독립성(Isolation) 
복수의 트랜잭션을 동시에 실행한 경우, 순서대로 실행한 결과와 같다
내구성Durability
트랜잭션 정상종료하면 갱신결과는 장해 발생하여도 디비에서 사라지지 않는다

베타제어
서로 갱신 중에 접근하지 못하도록 제어(록크)

공유락
트랜잭션이 데이터를 참조하기 전에 록을 거는 것
공유락 걸면 다른 트랜잭션이 참조할 수 있지만 갱신은 못 함

전유락
트랜잭션이 데이터를 갱신하기 전에 거는 락
전유락 시 다른 트랜잭션은 접근도, 갱신도 불가능

락의 입도를 크게 잡아서 걸어버리면 다른 트랜잭션의 기다림시간이 증가하고 전체 스루풋이 저하되고 만다

데드락
트랜잭션이 락이 걸린 서로를 바라보며 언제 끝나지 기다리는 상태 영원히 기다림 바보같이

2상커밋멘트(커밋 또는 롤백 0과 1)
일련의 트랜잭션처리를 행하는 여러 사이트로 갱신처리가 확정가능한가의 쿼리를 던졌을 때,
모든 사이트가 확정가능하면 갱신처리를 확정하는 방법
모든 사이트의 갱신이 가능하면 결과 커밋,
장해가 발생하면 처리 강제 종료하는 아보-토
모든 결과를 무효화 시키는 롤백


문제1)
DBMS에서 복수 트랜잭션 처리 프로그램을 같은 디비를 동시에 갱신하였을 경우,
논리적인 모순이 발생하지 않는 기법은?
베타제어


문제3)
2상커밋 설명

문제4)
트랜잭션의 동시실행제어에 이용되는 록의 작동에 관한 기술로 적절한 것
ㄱ. 공유록 획득즈미의 자원에 대해서 다른 트랜잭션의 새로운 공유록의 획득을 인정한다.
공유 - 공유인 경우만 인정함 나머지는 다 막아버림

문제5)
이거 외워

          성공                 성공
            ->  커밋 처리중 ->    커밋 즈미     -> 
액티브            ↓실패                                  종료
           ->   아보트처리중 -> 아보트 즈미   ->
            실패


디비의 장해 회복
- 롤 포워드
전진 복귀라고 해석되어 데이타베이스 시스템에 장해가 일어났을 때에, ★★갱신 후 로그★★를 이용해 지금까지 처리한 트랜잭션(transaction)를 재현해, 시스템 장해 직전까지 데이타베이스 정보를 복귀시키는 처리입니다.
매체 오류 발생 시에도 백업 파일과 로그를 이용하여 롤 포워드 백업 진행한다.
- 롤백
롤백은 트랜잭션 실패 또는 시스템 오류로 인해 트랜잭션이 성공적으로 종료되지 않은 경우 ★★갱신 전 로그★★를 사용하여 데이터베이스를 트랜잭션 시작 직전의 상태로 되돌리는 프로세스입니다.

문제1)
디스크 장해시, 풀백업을 취득하여 어느 테이프에서 디스크로 데이터를 복원한 후,
풀백업취득시 이후의 갱신 후 로그를 이용하여 데이터 베이스를 복원하는 방법은?
- 롤 포워드

문제2)
트랜잭션 처리 프로그램이 데이터 베이스 갱신 도중에 이상종료한 경우,
롤백 처리로 디비를 복원한다. 이 때 사용하는 정보는?
- 로그 파일의 갱신 전 정보


射影사영 
표에서 특정 열을 추출
선택
표에서 조건에 맞는 행을 추출
결합

와
두 테이블 UNION
적
두 테이블의 공통 행 추출
사
뺀 표 추출

SQL
DML데이터 조작어
SEELCT, INSERT, UPDATE, DELETE
DDL 데이터 정의어
CREATE, ALTER, DROP, RENAME, TRUNCATE
DCL
GRANT, REVOKE

BETWEEN A AND B

ORDER BY ASC(생략 가능) 상순 / DESC 하순

집합함수
SUM
AVG
MAX
MIN
COUNT

FROM 
GROUP BY 열명 HAVING 그룹화 조건

후쿠토이아와세
IN / NOT IN (SELECT ~~)


WHERE (NOT) EXISTS (SELECT ~~~)
결과를 참 또는 거짓으로 반환
존재 여부 조건 가능

시쿠미 SQL
프로그램 안에 짜넣는 거


데이터베이스 응용
NoSQL
SQL 사용 없이 조작하는 데이터베이스
키 벨류 형
키와 데이터의 조합
칼럼 지향형
키에 대한 칼럼(항목)을 자유롭게 추가 가능
도큐멘트 지향형
하나의 문서에 하나의 데이터가 됨
XML 등 사용
그래프 지향형
그래프 이론을 바탕으로 노트간의 방향성이 있는 릴레이션으로 이어진 구조화


데이터웨어하우스
기업의 여러 활동을 통하여 얻어진 대량의 데이터 정리, 총합한 데이터
데이터마이닝
대량의 데이터를 총계적, 학습적수법으로 분석하여 새로운 법칙이나 인과관계를 알아내는 것

오픈데이터
기계판독에 적절한 형식으로 원칙무상으로 자유롭게 2차이용이 가능한 룰 아래,
국가, 지자체, 기업 등이 공개하는 데이터


문제1)
오픈데이터 설명
영리, 비영리의 목적에 관계 없이 2차이용이 가능한 이용 룰이 정해져 있고,
편집이나 가공하기에 기계판독에 적절, 원칙무상으로 이용 가능한 형태로 공개되는 관민데이터


문제2)
빅데이터 처리에 사용되는 큐 밸류스토어의 설명
임의 보존 가능한 데이터에 식별 가능한 키로 조합하여 보존

문제3)
기업이 마케팅 호라동에 활용하는 빅데이터의 특징은 무엇
ㄴ. 축척한 정적인 데이터가 아닌, 웹 사이트의 접근 이력 등의 리얼타임성이 높은 데이터를 포함하여 처리 대상으로 함

7장
네트워크
LAN
어느 건물내나 敷地부지내 등으로 비교적 좁은 범위에 敷設부설한 네트워크

유선랜
이더넷 IEEE802.3
인터넷에 채용된 악세스 제어 방식 CSMA/CD
전송경로 상에서 데이터 끼리의 충돌을 검지하여 랜덤으로 시간을 가지고 재전송하는 방식

무선랜
IEEE802.11
MAC어드레스로 접속가능한 단말 제한
강고한 암호방식 WPA2, WPA3등
악세스포인트(ESSID)로 스텔스화 등
세큐리티 대책 필요

와이파이 다이렉트
와이파이를 이용하여 두 단말간 다이렉트로 데이터 전송 및 통신

WAN
원격지인 LAN 환경에 접속하기 위한 광역 네트워크

VPN
많은 사람이 공개적으로 이용하는 공중회선을 흡사 전용회선과 같이 사용할 수 있도록 하는 가상적 네트워크

데자링구
테더링이 테자링구였구나

MVNO

캐리어 어그리게이션
복수의 다른 주파수대를 묶어 보다 넓은 대역을 사용하는 것으로 무선통신의 고속화, 안정화를 노리는 방법

5G
초고속, 초저지연, 다수동시접속 3개지의 특징
10Gbps

네트워크 폭주輻輳

IoT 네트워크
고속의 4G, 5G와 더불어
저속으로 최대수키로의 광역을 커버할 수 있는 LPWA((Low Power Wide Area)) 를 이용하여 폭 넓은 서비스 제공


문제1)
CSMA/CD 설명
충돌 랜덤 지연

문제2)
IoT에서 활용되는 LPWA의 특징 및 설명
배터리 소비량이 적고, 하나의 기지국에서 광범위를 커버할 수 있는 무선통신기술로
복수의 센서가 동시에 이어지는 네트워크에 적합하다

문제3)
휴대전화망에 사용되는 통신규격의 명칭
1. 모든 통신을 패키지 교환방식으로 처리한다.
2. 복수의 안테나를 사용하는 MIMO라고 불리는 통신방식을 이용가능하다.
3. 국제표준화 프로젝트 3GPP로 표준화 되어있다.
LTE ( Long Term Evolution ) 



IOS 기본 참조 모델
7응용어플리케이션 : 어플리케이션 고유의 특징을 공유
6프레젠테이션 : 데이터의 표현방식을 통일화                             
5세션 : 통신의 개시와 종료를 공유
---------------------------------------                 / 4~7층 싸잡아서 게이트웨이
4트랜스포트 : 세그먼트 전송
 엔드시스템간(복수의 네트워크)의 통신의 신뢰성을 확보 
---------------------------------------
3네트워크 : 패킷 전송 / 루터, L3스위치
 엔드시스템간의 통신을 공유 
---------------------------------------
2데이터링크 : 프레임 전송 / 브릿지, 스위칭허브, L2스위치
 근접한 컴퓨터간의 통신을 공유 
1물리 : 리피터
 네트워크의 물리적 기능을 공유


TCP/IP프로토콜
7~5층 어플리케이션층 HTTP, FTP, TELNET, SNMP, NTP, SMTP, POP3, IMAP4
4층 트랜스포트층 TCP, UDP
3층 인터넷층 IP, ICMP, ARP
1~2층 네트워크인터페이스층 PPP, PPPoE


HTTP
HTML문서 등을 송수신함 하이퍼텍스트 프랜스펄 프로토콜
FTP
파일 전송
텔넷
원격지에 있는 컴퓨터에 리모트 로그인하는 조작
SNMP Simple Network Management Protocol
네트워크 상의 구성기기나 장해시의 정보수집을 행함
NTP
타임서버의 시각을 기본으로 복수의 컴퓨터의 시각을 통기화시키는 것
SMTP
메일 송신이나 메일 서버간의 메일 송수신
POP3
메일서버나 메일박스로 부터 메일을 수신
IMAP4
POP와는 다르게 메일 서버나 메일박스에서 필요한 메일만 수신


TCP
통신상대와 통신이 가능한지 확인. 신뢰성 높은 데이터 전송
UDP
신뢰성은 보증하지 않지만, 고속의 데이터 전송를 공유
리얼타임성 업


IP
IP주소를 이용한 데이터 통신
ICMP
통신상대와의 통신상태를 메세지로 반환함
ARP
IP주소 -> MAC 주소로 바꿔줌

PPP
2지점간을 접속하여 통신
PPPoE
LAN상에서 PPP를 행하여 상시접속함


문제1)
TCP/IP에서 서버와의 시각 맞추는
NTP

문제2)
트랜스포트층에서 신뢰성 보다 리얼타임성 중요시하는
UDP

문제3)
OSI기본참조모델에서 네트워크층의 설명
엔드시스템간의 데이터 전송을 실현하기 위해 루팅, 중계 등을 행함


네트워크 접속 기기
패켓토(패킷?)
네트워크상을 흐르는 데이터를 작게 분할한 것

데이터 전송단위
세그먼트(트랜스포트층) TCP헤더 + 데이터
패킷(네트워크층) IP헤더 + TCP헤더 + 데이터
프레임(데이터링크층) MAC헤더 + IP헤더 + TCP헤더 + 데이터

TCP헤더 - 전송모토와 아테사키의 포트번호 등
IP헤더 - 전송모토와 아테사키의 IP어드레스 등
MAC헤더 - 전송모토와 아테사키의 맥어드레스 등

리피터
물리층 증폭기

브릿지
데이터링크 MPC주소 분석하여 중계기

스위칭허브
랜케이블 다발로 꽂아서 전송

L2스위치
스위칭허브 + VLAN 등

루터
네트워크층 중계하는 장치
패킷 IP 어드레스 분석하여 가장 적절한 경로 선택(루팅)

L3스위치
루터는 소프트웨어로 제어하지만 L3스위치는 하드웨어로 제어하는 것?

게이트웨이
트랜스포트 4층 이상
LAN시스템 상호간으로 프로토콜을 교환하는 장치

디폴트 게이트웨이
각 네트워크의 입구와 출구

문제1)
LAN간 접속장치의 기술
리피터는 동류의 세그먼트간으로 통신을 증폭시기는 것으로 전송거리를 확장한다.

문제2)
레이어3스위치의 특징
네트워크층에서 아테사키 어드레스에 따라 적절한 LAN 포트에 패킷을 중계하는 기능

문제3)
1층, 2층, 3층
리피터, 브릿지, 루터


IP주소
IPv4는 4 * 8 = 32bit
0~255.255.255.255

사람이 이해하기 쉬운 도메인명

DNS 도메인 네임 시스템
도메인명이나 호스트명과 IP주소 대응하여 바꿔주는 시스템
DNS서버에 문의를 날려서 도메인명에서 IP주소 얻어냄, 역도 가능. 이걸 이름해결이라고 함

글로벌 IP주소
인터넷에서 사용하는 IP주소

프라이베이트 IP주소
LAN 등의 독립한 네트워크에서 사용하는 IP

DHCP
고정 IP말고 동적으로 자동으로 IP어드레스 할당해주는 프로토콜


포트번호
통신상대의 어플리케이션을 식별하기 위한 번호
0~1023은 정해진 웰노운 포트
FTP 전송, 제어 20 21
SMTP 25
DNS 53
HTTP 80
POP3 110


NAT
하나의 글로벌 IP를 하나의 프라이빗IP로 상호변환하는 기술
NAPT
하나의 글로벌 IP와 복수의 프라이벳 IP로 상호변환하는 기술
IP 마스카레도라고도 부름

문제1)
DNS 설명
도메인명이나 호스트명 등과 IP주소 대응

문제2)
하나의 글로벌 IP로 복수의 인터넷 접속이 가능한
NAPT

문제3)
문제3)
PC포트 50001
송신모토(Web서버) 의 포트 80


IP주소의 클래스
사용 용도에 따른 클래스 분류
글로벌 IP?
네트워크부 + 호스트부
A클래스 0네트워크부 + 호스트 24bit 대규모
B클래스 10네트워크부 + 호스트 16bit 중규모
C클래스 110네트워크부 + 호스트 8bit 소규모
..


프라이빗 IP 사설 IP의 분류
A클래스 10.0.0.0 ~ 10.255.255.255
B클래스 172.16.0.0 ~ 172.31.255.255
C클래스 192.168.0.0 ~ 192.168.255.255

127.x.x.x는 루프백, 자기 자신이라 프라이빗IP에서 못 씀


서브넥팅
호스트부의 정보를 분할하여, 네트워크부를 확장하는 개념

서브넷 마스크
호스트부와 네트워크부를 구분하기 위한 비트열
네트워크부에 1, 호스트부에 0
IP 192.168.1.19 의 서브넷 마스크 255.255.255.240
CIDR로 표현하면 192.168.1.19 / 28


IP주소
서브넷 마스크 AND
-----------------------
서브네트워크어드레스


IPv6
ip를 128비트로 확장
양쪽에 스택 가지게 할 수 있는 듀얼스택,
중신 나카다치(중계)하는 트랜스레이터,
IPv4의 안에 IPv6주소를 집어넣는 캡슐화(톤네링)
16진수 4문자씩 8자리로 표현
쿠기리에 : 사용
모두 0이면 ::로 표기하여 생략
생략은 한 장소만 생략 가능함

IPSec
TCP/IP의 암호통신를 행하기 위한 통신 프로토콜
IPv6의 표준으로 들어가 있음

문제1)
IPv4 128.0.0.0을 포함하는 어드레스 클래스는?
B클래스

문제2)
192.168.0.0 / 23 의 호스트로 사용가능한 어드레스 개수
전체 32bit중 사용 가능한 호스트 부분은 32 - 23 = 9비트
하위 9비트 사용 가능 2^9 - 2 = 510개

문제3)
10.1.2.146 / 255.255.255.240의 호스트가 속하는 서브네트워크는?
AND 연산
10.1.2.144 / 28

문제4)
네트워크 어드레스 : 200.170.70.16
서브넷 마스크 : 255.255.255.240
사용 가능한 범위
200.170.70.17~200.170.70.30 
30은 사용 불가능

문제5)
글로벌 ip는 무엇?
118.151.146.138

문제6)
IPv6 적절한 주소는 무엇?
2001:db8::3ab:ff01
:: 생략 한 장소만 사용해야할 것
주소 구분은 :
 
 문제7)
192.168.57.123 / 22 의 브로드캐스트 주소 구하는 문제
답은 192.168.59.255
해보면 됨

네트워크 관리
SDN Software Defined Networking
소프트웨어로 네트워크 기기를 집중적으로 제어하고, 구성이나 설정을 동적으로 변경하는 기술

SDN의 한 종류인 OpenFlow?

URL
일반 인터넷 주소
https://www.
스킴명 호스트명

URI
인터넷 상관 없이 정보원을 가르키는 URI

CGI
(Common Gateway Interface) 
웹브라우저에서의 요구에 대하여
웹서버가 외부 프로그램을 불러내
그 결과를 HTTP를 통해서 Web 브라우저로 보내는 것

MIME
메일 규격을 확장하여 문자, 음성, 영상 등의 멀티미디어를 메일에 포함하여 보낼 수 있는 기술?
+ 암호화 섞으면 S/MIME

메일벤더
SMTP로 메일 송신할 때 본문에 추가하는 제어 정보
FROM, CC, Bcc 등

메일의 송신자를 송신서버 측에서 인증으로 확인하는 SMTP-AUTO

회선 속도 bps
초당 비트 전송 속도

문제1)
OpenFlow를 사용한 SDN의 설명으로 알맞은 것은?
데이터 전송과 경로제어의 기능을 논리적으로 분리하여,
데이터 전송에 특화한 네트워크기기와 소프트웨어에 의해
경로제어의 조합으로 실현하는 네트워크 기술

문제2)
10M비트/초의 회선 속도를 평균 1M바이트의 파일을 10초 마다 전송할 때의 회선 이용률은 몇 프로인가.
단, 파일 전송시에는 전송양의 20%가 제어정보로서 포함되어 있다고 가정
1M비트=10^6비트로 함
1M바이트는 8M비트
10초가 아닌 1초당 전송하려는 양은 0.8M비트 여기에 제어정보 20% 더하면 0.8*1.2 = 0.96M비트
회선이 10M비트/초니 0.96/10 = 0.096 -> 9.6%

문제3)
전자메일의 헤더파일에 SMTP로 메시지가 전송되는 과정에서 삭제되는 정보는?
Bcc는 TO, CC 사람이 몰라야 하니 삭제됨

문제4)
전자메일를 어드민A의 전송자가 어드민B의 아테사키로 송신하려 할 때, 
송신자 어드민A 메일 서버 측에서 인증을 실시하는 것은?
SMTP-AUTH

문제5)
10M바이트의 데이터를 100,000비트/초의 회선을 이용하여 전송하려 할 때,
전송시간은 몇 초인가.
여기서 회선의 전송효율은 50%로 하고,
1M바이트는 10^6바이트로 함
1600초


제8장
정보세큐리티

정보 세큐리티 3요소
기밀성 Confidentiality (악세스 컨트롤러) - 인가 받은 정당한 유저만이 접근하도록
완전성 Integrity - 정보는 결함이 없이 언제나 완전한 상태로 있어야
가용성 Availability - 유저가 정보를 필요로할 때 언제라도 이용 가능하여야
JIS Q 27001(ISMS에 의한 인증기준)에도 채용

그 외에 
책임추적성 - 내가 안 했는데요? 방지 가능한 정보자산을 이용한 기록을 남기는 것
진정성 - 시스템이나 이용자인 척 할 수 없는 것, 엔티티는 그것이 주장하는 대로의 것일 것.
신뢰성 - 시스템의 작동 결과가 의도한 대로 일 것, 모순 되어있지 않은 가.


정보세큐리티 안에서 보호되어야 할 대상을 정보자산이라고 부름
정보자산을 명확히 하였으면 그것에 대한 위협을 명확히 해아 함
예를 들어 종이는 불, CD는 자석 등 모체에 따라 약점을 다름

어느 정보자산에 대하여 위협이 있는 것 만으로는 리스크는 현재화(顕在化けんざい)되지 않음
예를 들어 정보 자산 종이와 위협 불만으로는 리스크 현재화 되지 않고, 종이를 불 옆에 두는 상태가 있어야 성립됨.
이렇게 리스크를 현재화 시키는 상태를 [취약성(ぜいじゃく脆弱)]이라고 부름
마찬가지로 취약성이 있어도 위협이 존재하지 않으면 리스크가 되지 않는다.
[정보자산 + 위협 + 취약성 = 리스크] 어느 하나라도 빠지면 리스크는 발생하지 않는다.
위협과 취약성이 일체화 되었을 때 정보자산에 대한 리스크가 발생한다.


〇리스크 아세스멘트
현존하는 리스크를 평가하고, 조직에서 허용할 수 있는 리스크의 수준을 정하는 것
리스크 특정 -> 리스크 분석 -> 리스크 평가

〇리스크 대응
리스크 분석으로 얻은 결과(잠재적 리스크)를 현재화 시키지 않기 위해
리스크 회피, 리스크 최적화, 리스크 이동, 리스크 보유 등의 수단이 구성됨.
이러한 총칭을 리스크 대응이라고 함.
리스크 회피와 리스크 최적화는 리스크 컨트롤이라고도 부름.
리스크 대응의 중요한 점은 [리스크 아세스멘트의 결과를 확실히 반영시키는 것]
-리스크 회피
리스크 요인을 배재하는 조치
- 리스크 최적화(경감)
리스크에 의한 피해의 발생을 예방하는 조치.
리스크가 현재화하여도 그 피해액을 최소화하기 위한 조치.
백업, 세큐리티대책 등
- 리스크 이동
업무운영상의 리스크를 타사로 이동하는 것으로 리스크 대응을 하는 방법.
리스크에 대한 보험에 가입하거나, 해당 리스크에 관한 업무를 외부에 아웃소싱하는 등
- 리스크 보유
리스크가 수용수준내에 오사마루 경우나 경미한 리스크에 대응하는 코스트 쪽이 너무 높을 경우 등에는 그냥 그대로 두는 조치.
의사결정으로 리스크를 그대로 보유하는 것도 훌륭한 리스크 대응임.
리스크를 깨닫지 못하고 방치하는 것과는 다름.


〇정보 세큐리티 폴리시
기본 방침 3층 (WHY) :
            정보 세큐리티 폴리시에 대한 근본적인 사고 방식, 조직의 어떤 정보 자산을 왜 위협으로부터 지켜야 하는가
대책 기준 2층 (WHAT) : 
            기본 방침에서 정해진 정보 세큐리티를 확보하기 위해 준수해야 할 행동, 판단 등의 기준. 무엇을 해야 하는가.
실시 순서 1층 (HOW) : 
            대책 기준에 정해진 내용을 보다 구체적으로 어떻게 실행해 나가야 하는가.
중소기업의 경우 1층 2층 섞어서 1계층, 기본방침을 2계층으로 책정해도 됨.


〇CSIRT란
정보보세큐리티에 관여한 어떤 인시던트가 발생했을 때 그 대응을 하는 팀의 총칭.
Computer Security Incident HesponSe Team
각 기업, 지방, 학교 등 단위로 알맞은 수준의 CSIRT를 운영하는 중
일본을 대표하는 가장 큰 CSIRT에는 JPCERT/CC 가 존재하며, 국제연계의 마도구치 기능으로서 활동, 저명한 유명 인물들도 많이 있음
작읍 기업의 세큐리티팀도 멋진 CSIRT라고 할 수 있음

조직내 CSIRT의 역할
대상범위에서 일어난 인시던트의 대응, 기술적 지원을 행하는 등
범위 내에는 고객이나 관련 기업을 포함하는 경우도 있음


〇정보 세큐리티 마네지먼트 시스템(ISMS：Information Security Management System)의
정보 세큐리티 관리, 리스크, 제어에 대한 베스트 푸라크티스(실행)
JIS Q 27000


세큐리티 바이 디자인의 설명
- 시스템의 기획·설계 단계로부터 세큐리티를 확보하는 방책이다.

위협의 종류
- 물리적 위협

- 인적 위협
소셜 엔지니어링
비상사태를 가장하여 내부의 인간으로부터 패스워드나 기밀 정보를 입수하는 부정한 행위
숄더해킹
어깨 너머로 슬쩍 화면 훔쳐 보기

클리어 스크린이나 클리어데스크 실행할 것

〇부정한 트라이앵글
-동기・압박
    자기의 욕구 달성이나 문제를 해결하기 위해서는 부정을 할 수밖에 없다는 생각에 이른 심정.
    예를 들어 '과대한 노르마', '개인적으로 금전적 문제가 있다'는 심정이 이에 해당된다.
-기회
    부정을 행하려고 하면 언제라도 할 수 있는 직장 환경.
    예를 들면, 「악용 가능한 시스템의 미비가 존재한다」, 「체크할 사람이 없다」 「해도 안 된다」라고 하는 직장 ​​환경이, 이것에 적용된다.
-정당화
    자신에게 사정의 좋은 이유를 꽂아 부정을 할 때 느끼는 "양심의 책책"을 극복하는 것.
    예를 들면, 「조직을 위한 것이고, 나쁜 것은 아니다」, 「자신의 잘못이 아니고, 조직·제도가 나쁘다」 「직장에서 불우한 취급을 받고 있다」등의
    신기한 변명(죄악감으로부터의 도피 와 책임 전가)가, 이것에 적용된다.

부정의 트라이앵글
( 
  동기 - 수술비를 마련해야 해
  기회 - 아무도 보고 있지 않아 
  정당화 - 다들 이정도는 하잖아?
 )

- 기술적 위협

맬웨어
악의를 가지고 만들어진 부정 프로그램의 총칭

키로거
    감염된 PC의 키 조작을 기록하고 넷 뱅킹의 PIN을 훔치는 악성 코드
스파이웨어
    감염된 PC에 저장된 암호 정보를 훔치는 맬웨어
랜섬웨어
    감염된 PC의 파일을 암호화하고, 파일의 복호와 교환에 금전을 요구하는 맬웨어.
루트킷
    서버에 백도어를 만들고, 서버내에서 침입의 흔적을 은폐하는 등의 기능을 가지는 부정한 프로그램

BYOD(Bring Your Own Device)
직원이 사적으로 보유한 정보 단말을 업무에 이용하는 것으로, 세큐리티 설정의 미비에 기인하는 바이러스 감염 등의 정보 세큐리티 위험이 증가한다.


윌스 대책 소프트
패턴 매칭 방법
     검사대상과 既知きち이미 가지고 있음 의 시그니쳐 코드를 비교하여 찾아내는 법
비헤이비어방식(후루마이 검지)
     검사 대상을 메모리의 가상 환경하에서 실행하여 그 거동을 감시한다.
      ( 바이러스의 실제의 감염·발병 동작을 감시해 검출하는 수법입니다.)

세큐리티 홀 (취약점)을 파고들어 공격하기 때문에 세큐리티 패치를 매일 같이 반영해야함
분명 대책이 만들어 졌음에도 패치하기 전에 공격하는 걸 제로데이 공격


★APT 설명
- 공격자는 특정한 목적을 가지고,
표적이 되는 조직의 방어책에 따라 복수의 수법을 조합해,
눈치채지 못하도록 집요하게 공격을 반복한다.
APT 공격 (Advanced Persistent Threats)
지속적 표적형 공격


패스워드 크랙 공격
사전(辞書) 공격
        사전에 실려 있는 영어 단어나 자주 사용되는 문자열 등 비밀번호에 쓰일 것 같은
        문자열이 대량으로 등록된 파일(사전 파일)을 준비하여 하나씩 시험해 나가는 것으로 암호를 깨려고 하는 공격 기법.
패스워드 리스트 공격
     어딘가의 웹사이트에서 유출한 사용자 ID와 패스워드의 리스트를 이용해, 다른 웹사이트에 대해서 로그인을 시도한다.
-브루트 포스 공격
        특정 문자 수와 문자 유형으로 설정할 수 있는 모든 조합을 시도하여 비밀번호 시도
        패스워드 길이가 짧고, 사용 가능한 문자종이 적은 경우에는, 이 수법에 의해 깨질 가능성이 높아져 버린다.
        추측되기 어려운 비밀번호 설정하고, 패스워드는 암호화해서 보내고, 로그인 시행회수에 제한을 건다.





도스 공격
특정 서버 공격
디도스공격
복수의 컴퓨터로 한 번에 서버 공격

IPS (Intrusion Prevention System, 침입 방어 시스템)
NIDS(Network IDS)를 발전시킨 형태로 기존 검지, 통지 기능에 추가로 부정 엑세스 차단 등의 방어 기능을 가짐.
- 서버 및 네트워크 침입을 방지하기 위해 잘못된 통신을 감지하고 차단하는 장치



크로스 사이트 스크립팅(XSS)
답)공격자가 함정을 파놓은 웹 페이지를 이용자가 열람하고, 해당 페이지내의 링크를 클릭했을 때, 부정 스크립트를 포함한 문자열이 취약한 Web 서버에 보내져, 리스폰에 츠메코마레타(끼워넣어진) 부정 스크립트의 실행에 의해 정보 유출이 발생.
답)웹 애플리케이션에 제공된 입력 필드에 악성 JavaScript 코드가 포함된 데이터를 입력합니다.
입력 데이터에 HTML, JavaScript 등이 포함되어 있으면 이스케이프 처리로 대책


SQL인잭션
        공격자가 데이터베이스에 대한 명령문을 구성하는 데이터를 웹 응용 프로그램의 입력 데이터로 입력하고
        관리자가 의도하지 않은 SQL 문을 실행합니다.


클라이언트와 웹 서버 사이에서 클라이언트가 웹 서버로 전송된 데이터를 검사하여 SQL 인젝션 등의 공격을 차단하기 위한 것은 무엇인가?
- WAF (Web Application Firewall)

WAF (Web Application Firewall)에서 블랙리스트 또는 화이트리스트에 대한 설명 중 적절한 것은 무엇입니까?
블랙리스트는 문제가 있는 통신 데이터 패턴을 정의한 것으로, 해당 통신을 차단 또는 무해화한다.
- 블랙리스트
모든 패킷을 "허가"하는 초기 상태로 통신을 "거부"하는 규칙을 설명하는 목록
- 화이트리스트
모든 패킷을 "거부"하는 초기 상태로 통신을 "허용"하는 규칙을 설명하는 목록



디렉토리 트래버설 공격에 해당하는 것은 무엇인가.
- 공격자는 경로 이름을 사용하여 파일을 지정하고 관리자가 의도하지 않은 파일을 부적절하게 탐색합니다.


클릭 재킹 공격.
- 웹 사이트 A의 콘텐츠 위에 투명화한 표적 사이트 B의 콘텐츠를 배치하고, 웹 사이트 A상의 조작으로 보이게 하여 표적 사이트 B상에서 조작시킨다.
클릭재킹은 웹페이지의 콘텐츠를 클릭하려는 사용자를 시각적으로 속여 공격자가 준비한 외부 사이트의 웹페이지를 클릭하는 행위입니다.


디지털 포렌직쿠스(법의학)에 대한 설명으로 적절한 것은 무엇입니까?
- 불법 액세스 등 컴퓨터에 관한 범죄에 대해 법적인 증거성을 확보할 수 있도록 원인 규명에 필요한 정보의 보전, 수집, 분석을 하는 것


〇공통키 암호화 방식 (비밀키 암호화 방식) 
공통의 비밀키로 암호화, 복호화 하는 방식
상대에게 안전하게 키를 건낼 방법이 있어야 하고, 키의 관리가 중요, 공개키암호화방식에 비해 빠름
AES (Advanced Encryption Standard)
미국의 차세대 암호화 방식으로 규격화된 공통키 암호화 방식 입니다.

〇공개키암호화 방식
보내는 사람(암호화 하는 사람)은 받는 사람(복호화 하는 사람)의 공개키로 암호화하고,
받는 사람은 자신의 비밀키로 복호화 하는 것
다소 키의 배포나 관리가 용이(상대방에게 암호화할 나의 공개키만 주면 되니까)
공통키에 비해 처리가 느림
RSA 
  매우 큰 수의 소인수 분해가 곤란한 것을 이용한 공개키 암호 방식
타원(楕円、だえん) 곡선 암호
  RSA 암호에 비해 짧은 키 길이로 같은 수준의 안전성을 실현할 수 있다.



〇전자서명
디지털 서명은 보내는 사람의 비밀키로 암호화하고, 보내는 사람의 공개키로 복호화하는 방식

송신자는 평서문을 해쉬함수를 이용하여 문자열 작성
->작성한 문자열을 송신자의 비밀키로 암호화하여 디지털 서명 작성
-> 전자문서에 암호화한 디지털 서명을 첨부하여 보냄

수신자는 송신자와 같은 해쉬함수를 이용하여 받은 내용을 작성함
-> 디지털 서명을 송신자의 공개키로 복호화 함 (보낸 사람이 맞는지 확인)
-> 해쉬함수로 작성된 내용과 복호화한 내용이 일치하는지 확인(문서가 카이잔 안됐는지 확인)


디지털 서명 등에 사용하는 해시 함수의 특징
메시지 다이제스트(요약, 간추림?)로부터 메시지를 복원하는 것은 어렵다.
해시 함수는 단방향 알고리즘으로 결과에서 입력 소스를 복원한 것은 어렵다.
SHA, SHA-256, SHA-512 등



인증국(CA)의 역할
- 거래당사자의 공개키에 대한 디지털증명서를 발행한다.
공개키를 제3자인 CA(인증국)에 의해 발행되고 있음.
인증국의 공개키를 이용하여 인증국 디지털 서명을 증명함.


PKI
Public Key Infrastructure
공개키의 정당성을 제3자가 보증하는 일련의 구조.
실효된 디지털 인증서 목록을 발행합니다.
디지털 인증서를 확인하기 위해 인증 기관의 공개 키 공개.
신청자의 공개키에 디지털 서명을 붙인 디지털 증명서를 발행한다


SSL
(Secure Sockets Layer) 
인터넷 상의 통신을 암호화하여 도청, 카이잔 방지하는 프로토콜

HTTP 통신의 암호화
   TLS(Transport Layer Security)
      SSL을 기반으로한 표준화, SSL/TLS라고도 함
   HTTPS(Hypertext Transfer Protocol Secure, HTTP over SSL/TLS))
       전자증명서에 의한 서버 인증



바이오메트릭스 인증 시스템의 판정 임계값을 변화시킬 때, FRR(본인 거부율)과 FAR(타인 수입률)의 관계는 어느 것인가.
- FRR을 줄이면 FAR이 증가합니다.
반비례 관계


인간은 읽을 수 있지만 프로그램에서는 읽는 것이 어렵다는 차이를 이용하여 왜곡되거나 일부를 숨긴 이미지에서 문자를 읽고 입력시켜 프로그램에 의한 자동 입력을 배제하기 위해 기술은 어느 것.
- CAPTCHA


파이어월
외부로 부터의 부정한 악세스 방지
패킷 파이어월
패킷의 헤더를 판단하여, 통신통과 여부를 결정하는 것



사내 네트워크로부터 인터넷에의 액세스를 중계해, Web 컨텐츠를 캐쉬하는 것에 의해 액세스를 고속으로 하는 구조로, 세큐리티의 확보에도 이용되는 것은 어느 것인가.
프록시(프로킨), 대리서버라고도 부름


DMZ
인터넷의 외부네트워크와 기업의 내부네크워크 사이에 간격을 둔 세그먼트(구역)


UTM (Unified Threat Management)
      방화벽 기능을 가지며, 맬웨어 대책 기능, 침입 검지 기능 등의 복수의 보안 기능을 연계시켜 통합적으로 관리한다.


SIEM (Security Information and Event Management)의 기능으로 가장 적합한 것은 무엇입니까?
답_서버나 네트워크 기기 등의 (로그) 데이터를 일괄 관리, 분석하여 세큐리티 위협을 발견하고 통지한다.
답_다양한 기기에서 수집된 (로그)를 종합적으로 분석하여 관리자에 의한 분석을 지원한다.




문제) 리스크 아세스멘트
리스크 특정 -> 리스크 분석 -> 리스크 평가



문제)
리스크 레벨
- 결과와 발생하기 쉬움(발생 가능성)의 조합으로 표현되는 위험의 크기



문제)
리스크 대책의 수법 중, 리스크 파이낸싱에 해당하는 것은 어느 것인가.
- 리스크에 의해 시스템이 피해를 입은 경우를 상정하여 보험을 걸 것.



문제)
공격자가 준비한 서버 X의 IP 주소가 A사 웹 서버의 FQDN에 대응하는 IP 주소로서 B사 DNS 캐시 서버에 저장되었다.
이것에 의해, 의도하지 않고 서버 X에 유도되어 버리는 이용자는 어느 것인가.
여기서, A사, B사의 각 직원은 자사의 DNS 캐시 서버를 이용하여 이름 해석을 실시한다.
- A사 웹서버에 접속하려는 B사 직원


문제)
A씨가 B씨의 공개키로 암호화한 전자 메일을, B씨와 C씨에게 송신한 결과 중, 적절한 것은 어떤 것인가. 여기서, A씨, B씨, C씨의 각각의 공개키는 3명 전원이 갖고, 각각의 비밀키는 본인만이 가지고 있는 것으로 한다.
암호화된 이메일을 B씨만이 자신의 비밀키로 복호할 수 있다.


문제2)
서로 데이터 주고 받고
PC 1024이상
웹서버 80

문제3)
하나의 방화벽에 의해 외부 세그먼트, DMZ, 내부 네트워크의 3개의 세그먼트로 분할된 네트워크가 있다. 이 네트워크에서 웹 서버와 중요한 데이터를 가진 DB 서버로 구성된 시스템을 사용하여 사용자를위한 서비스를 인터넷에 공개 할 때 인터넷에서 무단 액세스로부터 중요한 데이터를 보호하기위한 서버 설치 방법 중 가장 적합한 것은? 여기서 방화벽에서 외부 세그먼트와 DMZ 간 및 DMZ와 내부 네트워크 간의 통신은 특정 프로토콜 만 허용하고 외부 세그먼트와 내부 네트워크 질문의 통신은 허용하지 않습니다.
- 웹 서버를 DMZ에, DB 서버를 내부 네트워크에 설치합니다.


문제4)
ファジング퍼징 설명
문제를 일으킬 수 있는 다양한 데이터를 자동 생성하고, 소프트웨어에 입력했을 때의 소프트웨어의 응답이나 거동으로부터 취약성을 검출한다.